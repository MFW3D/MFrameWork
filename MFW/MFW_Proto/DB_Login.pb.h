// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DB_Login.proto

#ifndef PROTOBUF_DB_5fLogin_2eproto__INCLUDED
#define PROTOBUF_DB_5fLogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "DB_Base.pb.h"
#include "Login_Client.pb.h"
// @@protoc_insertion_point(includes)
namespace PDB_Base {
class DBAccount;
class DBAccountDefaultTypeInternal;
extern DBAccountDefaultTypeInternal _DBAccount_default_instance_;
class DBUserInfo;
class DBUserInfoDefaultTypeInternal;
extern DBUserInfoDefaultTypeInternal _DBUserInfo_default_instance_;
}  // namespace PDB_Base
namespace PDB_Login {
class DL_UserCheck;
class DL_UserCheckDefaultTypeInternal;
extern DL_UserCheckDefaultTypeInternal _DL_UserCheck_default_instance_;
class LD_UserCheck;
class LD_UserCheckDefaultTypeInternal;
extern LD_UserCheckDefaultTypeInternal _LD_UserCheck_default_instance_;
}  // namespace PDB_Login
namespace PLogin_Client {
class CL_Login;
class CL_LoginDefaultTypeInternal;
extern CL_LoginDefaultTypeInternal _CL_Login_default_instance_;
class LC_Login;
class LC_LoginDefaultTypeInternal;
extern LC_LoginDefaultTypeInternal _LC_Login_default_instance_;
}  // namespace PLogin_Client

namespace PDB_Login {

namespace protobuf_DB_5fLogin_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DB_5fLogin_2eproto

enum EDL_CMD {
  EDL_CMD_None = 0,
  EDL_CMD_UserCheck = 2001,
  EDL_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EDL_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EDL_CMD_IsValid(int value);
const EDL_CMD EDL_CMD_MIN = EDL_CMD_None;
const EDL_CMD EDL_CMD_MAX = EDL_CMD_UserCheck;
const int EDL_CMD_ARRAYSIZE = EDL_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDL_CMD_descriptor();
inline const ::std::string& EDL_CMD_Name(EDL_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDL_CMD_descriptor(), value);
}
inline bool EDL_CMD_Parse(
    const ::std::string& name, EDL_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDL_CMD>(
    EDL_CMD_descriptor(), name, value);
}
// ===================================================================

class LD_UserCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PDB_Login.LD_UserCheck) */ {
 public:
  LD_UserCheck();
  virtual ~LD_UserCheck();

  LD_UserCheck(const LD_UserCheck& from);

  inline LD_UserCheck& operator=(const LD_UserCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LD_UserCheck& default_instance();

  static inline const LD_UserCheck* internal_default_instance() {
    return reinterpret_cast<const LD_UserCheck*>(
               &_LD_UserCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LD_UserCheck* other);

  // implements Message ----------------------------------------------

  inline LD_UserCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  LD_UserCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LD_UserCheck& from);
  void MergeFrom(const LD_UserCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LD_UserCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PLogin_Client.CL_Login loginMsg = 2;
  bool has_loginmsg() const;
  void clear_loginmsg();
  static const int kLoginMsgFieldNumber = 2;
  const ::PLogin_Client::CL_Login& loginmsg() const;
  ::PLogin_Client::CL_Login* mutable_loginmsg();
  ::PLogin_Client::CL_Login* release_loginmsg();
  void set_allocated_loginmsg(::PLogin_Client::CL_Login* loginmsg);

  // int64 ConId = 1;
  void clear_conid();
  static const int kConIdFieldNumber = 1;
  ::google::protobuf::int64 conid() const;
  void set_conid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PDB_Login.LD_UserCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PLogin_Client::CL_Login* loginmsg_;
  ::google::protobuf::int64 conid_;
  mutable int _cached_size_;
  friend struct protobuf_DB_5fLogin_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DL_UserCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PDB_Login.DL_UserCheck) */ {
 public:
  DL_UserCheck();
  virtual ~DL_UserCheck();

  DL_UserCheck(const DL_UserCheck& from);

  inline DL_UserCheck& operator=(const DL_UserCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DL_UserCheck& default_instance();

  static inline const DL_UserCheck* internal_default_instance() {
    return reinterpret_cast<const DL_UserCheck*>(
               &_DL_UserCheck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DL_UserCheck* other);

  // implements Message ----------------------------------------------

  inline DL_UserCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  DL_UserCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DL_UserCheck& from);
  void MergeFrom(const DL_UserCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DL_UserCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .PLogin_Client.CL_Login loginMsg = 3;
  bool has_loginmsg() const;
  void clear_loginmsg();
  static const int kLoginMsgFieldNumber = 3;
  const ::PLogin_Client::CL_Login& loginmsg() const;
  ::PLogin_Client::CL_Login* mutable_loginmsg();
  ::PLogin_Client::CL_Login* release_loginmsg();
  void set_allocated_loginmsg(::PLogin_Client::CL_Login* loginmsg);

  // .PDB_Base.DBAccount dBAccount = 4;
  bool has_dbaccount() const;
  void clear_dbaccount();
  static const int kDBAccountFieldNumber = 4;
  const ::PDB_Base::DBAccount& dbaccount() const;
  ::PDB_Base::DBAccount* mutable_dbaccount();
  ::PDB_Base::DBAccount* release_dbaccount();
  void set_allocated_dbaccount(::PDB_Base::DBAccount* dbaccount);

  // int64 ConId = 2;
  void clear_conid();
  static const int kConIdFieldNumber = 2;
  ::google::protobuf::int64 conid() const;
  void set_conid(::google::protobuf::int64 value);

  // int32 ret = 1;
  void clear_ret();
  static const int kRetFieldNumber = 1;
  ::google::protobuf::int32 ret() const;
  void set_ret(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PDB_Login.DL_UserCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::PLogin_Client::CL_Login* loginmsg_;
  ::PDB_Base::DBAccount* dbaccount_;
  ::google::protobuf::int64 conid_;
  ::google::protobuf::int32 ret_;
  mutable int _cached_size_;
  friend struct protobuf_DB_5fLogin_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LD_UserCheck

// int64 ConId = 1;
inline void LD_UserCheck::clear_conid() {
  conid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 LD_UserCheck::conid() const {
  // @@protoc_insertion_point(field_get:PDB_Login.LD_UserCheck.ConId)
  return conid_;
}
inline void LD_UserCheck::set_conid(::google::protobuf::int64 value) {
  
  conid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Login.LD_UserCheck.ConId)
}

// .PLogin_Client.CL_Login loginMsg = 2;
inline bool LD_UserCheck::has_loginmsg() const {
  return this != internal_default_instance() && loginmsg_ != NULL;
}
inline void LD_UserCheck::clear_loginmsg() {
  if (GetArenaNoVirtual() == NULL && loginmsg_ != NULL) delete loginmsg_;
  loginmsg_ = NULL;
}
inline const ::PLogin_Client::CL_Login& LD_UserCheck::loginmsg() const {
  // @@protoc_insertion_point(field_get:PDB_Login.LD_UserCheck.loginMsg)
  return loginmsg_ != NULL ? *loginmsg_
                         : *::PLogin_Client::CL_Login::internal_default_instance();
}
inline ::PLogin_Client::CL_Login* LD_UserCheck::mutable_loginmsg() {
  
  if (loginmsg_ == NULL) {
    loginmsg_ = new ::PLogin_Client::CL_Login;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Login.LD_UserCheck.loginMsg)
  return loginmsg_;
}
inline ::PLogin_Client::CL_Login* LD_UserCheck::release_loginmsg() {
  // @@protoc_insertion_point(field_release:PDB_Login.LD_UserCheck.loginMsg)
  
  ::PLogin_Client::CL_Login* temp = loginmsg_;
  loginmsg_ = NULL;
  return temp;
}
inline void LD_UserCheck::set_allocated_loginmsg(::PLogin_Client::CL_Login* loginmsg) {
  delete loginmsg_;
  loginmsg_ = loginmsg;
  if (loginmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Login.LD_UserCheck.loginMsg)
}

// -------------------------------------------------------------------

// DL_UserCheck

// int32 ret = 1;
inline void DL_UserCheck::clear_ret() {
  ret_ = 0;
}
inline ::google::protobuf::int32 DL_UserCheck::ret() const {
  // @@protoc_insertion_point(field_get:PDB_Login.DL_UserCheck.ret)
  return ret_;
}
inline void DL_UserCheck::set_ret(::google::protobuf::int32 value) {
  
  ret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Login.DL_UserCheck.ret)
}

// int64 ConId = 2;
inline void DL_UserCheck::clear_conid() {
  conid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DL_UserCheck::conid() const {
  // @@protoc_insertion_point(field_get:PDB_Login.DL_UserCheck.ConId)
  return conid_;
}
inline void DL_UserCheck::set_conid(::google::protobuf::int64 value) {
  
  conid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Login.DL_UserCheck.ConId)
}

// .PLogin_Client.CL_Login loginMsg = 3;
inline bool DL_UserCheck::has_loginmsg() const {
  return this != internal_default_instance() && loginmsg_ != NULL;
}
inline void DL_UserCheck::clear_loginmsg() {
  if (GetArenaNoVirtual() == NULL && loginmsg_ != NULL) delete loginmsg_;
  loginmsg_ = NULL;
}
inline const ::PLogin_Client::CL_Login& DL_UserCheck::loginmsg() const {
  // @@protoc_insertion_point(field_get:PDB_Login.DL_UserCheck.loginMsg)
  return loginmsg_ != NULL ? *loginmsg_
                         : *::PLogin_Client::CL_Login::internal_default_instance();
}
inline ::PLogin_Client::CL_Login* DL_UserCheck::mutable_loginmsg() {
  
  if (loginmsg_ == NULL) {
    loginmsg_ = new ::PLogin_Client::CL_Login;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Login.DL_UserCheck.loginMsg)
  return loginmsg_;
}
inline ::PLogin_Client::CL_Login* DL_UserCheck::release_loginmsg() {
  // @@protoc_insertion_point(field_release:PDB_Login.DL_UserCheck.loginMsg)
  
  ::PLogin_Client::CL_Login* temp = loginmsg_;
  loginmsg_ = NULL;
  return temp;
}
inline void DL_UserCheck::set_allocated_loginmsg(::PLogin_Client::CL_Login* loginmsg) {
  delete loginmsg_;
  loginmsg_ = loginmsg;
  if (loginmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Login.DL_UserCheck.loginMsg)
}

// .PDB_Base.DBAccount dBAccount = 4;
inline bool DL_UserCheck::has_dbaccount() const {
  return this != internal_default_instance() && dbaccount_ != NULL;
}
inline void DL_UserCheck::clear_dbaccount() {
  if (GetArenaNoVirtual() == NULL && dbaccount_ != NULL) delete dbaccount_;
  dbaccount_ = NULL;
}
inline const ::PDB_Base::DBAccount& DL_UserCheck::dbaccount() const {
  // @@protoc_insertion_point(field_get:PDB_Login.DL_UserCheck.dBAccount)
  return dbaccount_ != NULL ? *dbaccount_
                         : *::PDB_Base::DBAccount::internal_default_instance();
}
inline ::PDB_Base::DBAccount* DL_UserCheck::mutable_dbaccount() {
  
  if (dbaccount_ == NULL) {
    dbaccount_ = new ::PDB_Base::DBAccount;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Login.DL_UserCheck.dBAccount)
  return dbaccount_;
}
inline ::PDB_Base::DBAccount* DL_UserCheck::release_dbaccount() {
  // @@protoc_insertion_point(field_release:PDB_Login.DL_UserCheck.dBAccount)
  
  ::PDB_Base::DBAccount* temp = dbaccount_;
  dbaccount_ = NULL;
  return temp;
}
inline void DL_UserCheck::set_allocated_dbaccount(::PDB_Base::DBAccount* dbaccount) {
  delete dbaccount_;
  dbaccount_ = dbaccount;
  if (dbaccount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Login.DL_UserCheck.dBAccount)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace PDB_Login

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PDB_Login::EDL_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PDB_Login::EDL_CMD>() {
  return ::PDB_Login::EDL_CMD_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DB_5fLogin_2eproto__INCLUDED
