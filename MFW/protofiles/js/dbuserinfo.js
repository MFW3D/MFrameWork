/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.PDB_Base.DBUserInfo');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.PDB_Base.DBUserInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.PDB_Base.DBUserInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.PDB_Base.DBUserInfo.displayName = 'proto.PDB_Base.DBUserInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.PDB_Base.DBUserInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.PDB_Base.DBUserInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.PDB_Base.DBUserInfo} msg The msg instance to transform.
 * @return {!Object}
 */
proto.PDB_Base.DBUserInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uluid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    charnickname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    uisex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ulgoldnum: jspb.Message.getFieldWithDefault(msg, 4, 0),
    uldiamondnum: jspb.Message.getFieldWithDefault(msg, 5, 0),
    uirobot: jspb.Message.getFieldWithDefault(msg, 6, 0),
    uimatchwincount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    uimatchlosecount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    ulcustomroompoint: jspb.Message.getFieldWithDefault(msg, 9, 0),
    sheadimgurl: msg.getSheadimgurl_asB64(),
    uiidentity: jspb.Message.getFieldWithDefault(msg, 11, 0),
    ulclub: jspb.Message.getFieldWithDefault(msg, 12, 0),
    uiaccountstatus: jspb.Message.getFieldWithDefault(msg, 13, 0),
    ulaccountstatuschangetime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    scontributions: msg.getScontributions_asB64(),
    ulcontributionchangetime: jspb.Message.getFieldWithDefault(msg, 16, 0),
    srankextend: msg.getSrankextend_asB64(),
    ullogintime: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.PDB_Base.DBUserInfo}
 */
proto.PDB_Base.DBUserInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.PDB_Base.DBUserInfo;
  return proto.PDB_Base.DBUserInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.PDB_Base.DBUserInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.PDB_Base.DBUserInfo}
 */
proto.PDB_Base.DBUserInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUluid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCharnickname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUisex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUlgoldnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUldiamondnum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUirobot(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUimatchwincount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUimatchlosecount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUlcustomroompoint(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSheadimgurl(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUiidentity(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUlclub(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setUiaccountstatus(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUlaccountstatuschangetime(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setScontributions(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUlcontributionchangetime(value);
      break;
    case 17:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSrankextend(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUllogintime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.PDB_Base.DBUserInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.PDB_Base.DBUserInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.PDB_Base.DBUserInfo} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.PDB_Base.DBUserInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUluid();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCharnickname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUisex();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getUlgoldnum();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getUldiamondnum();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getUirobot();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getUimatchwincount();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getUimatchlosecount();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getUlcustomroompoint();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getSheadimgurl_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
  f = message.getUiidentity();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getUlclub();
  if (f !== 0) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = message.getUiaccountstatus();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getUlaccountstatuschangetime();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getScontributions_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getUlcontributionchangetime();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getSrankextend_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      17,
      f
    );
  }
  f = message.getUllogintime();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
};


/**
 * optional uint64 ulUid = 1;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUluid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUluid = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string charNickName = 2;
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getCharnickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.PDB_Base.DBUserInfo.prototype.setCharnickname = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 uiSex = 3;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUisex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUisex = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint64 ulGoldNum = 4;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUlgoldnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUlgoldnum = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional uint64 ulDiamondNum = 5;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUldiamondnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUldiamondnum = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional uint32 uiRobot = 6;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUirobot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUirobot = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional uint32 uiMatchWinCount = 7;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUimatchwincount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUimatchwincount = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional uint32 uiMatchLoseCount = 8;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUimatchlosecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUimatchlosecount = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint64 ulCustomRoomPoint = 9;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUlcustomroompoint = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUlcustomroompoint = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional bytes sHeadImgurl = 10;
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getSheadimgurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes sHeadImgurl = 10;
 * This is a type-conversion wrapper around `getSheadimgurl()`
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getSheadimgurl_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSheadimgurl()));
};


/**
 * optional bytes sHeadImgurl = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSheadimgurl()`
 * @return {!Uint8Array}
 */
proto.PDB_Base.DBUserInfo.prototype.getSheadimgurl_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSheadimgurl()));
};


/** @param {!(string|Uint8Array)} value */
proto.PDB_Base.DBUserInfo.prototype.setSheadimgurl = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional uint32 uiIdentity = 11;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUiidentity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUiidentity = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional uint64 ulClub = 12;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUlclub = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUlclub = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint32 uiAccountStatus = 13;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUiaccountstatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUiaccountstatus = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional uint64 ulAccountStatusChangeTime = 14;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUlaccountstatuschangetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUlaccountstatuschangetime = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional bytes sContributions = 15;
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getScontributions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes sContributions = 15;
 * This is a type-conversion wrapper around `getScontributions()`
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getScontributions_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getScontributions()));
};


/**
 * optional bytes sContributions = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getScontributions()`
 * @return {!Uint8Array}
 */
proto.PDB_Base.DBUserInfo.prototype.getScontributions_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getScontributions()));
};


/** @param {!(string|Uint8Array)} value */
proto.PDB_Base.DBUserInfo.prototype.setScontributions = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional uint64 ulContributionChangeTime = 16;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUlcontributionchangetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUlcontributionchangetime = function(value) {
  jspb.Message.setField(this, 16, value);
};


/**
 * optional bytes sRankExtend = 17;
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getSrankextend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * optional bytes sRankExtend = 17;
 * This is a type-conversion wrapper around `getSrankextend()`
 * @return {string}
 */
proto.PDB_Base.DBUserInfo.prototype.getSrankextend_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSrankextend()));
};


/**
 * optional bytes sRankExtend = 17;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSrankextend()`
 * @return {!Uint8Array}
 */
proto.PDB_Base.DBUserInfo.prototype.getSrankextend_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSrankextend()));
};


/** @param {!(string|Uint8Array)} value */
proto.PDB_Base.DBUserInfo.prototype.setSrankextend = function(value) {
  jspb.Message.setField(this, 17, value);
};


/**
 * optional uint64 ulLoginTime = 18;
 * @return {number}
 */
proto.PDB_Base.DBUserInfo.prototype.getUllogintime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.PDB_Base.DBUserInfo.prototype.setUllogintime = function(value) {
  jspb.Message.setField(this, 18, value);
};


