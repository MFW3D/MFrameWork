// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DB_Base.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DB_Base.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PDB_Base {
class DBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBAccount> {
} _DBAccount_default_instance_;
class DBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DBUserInfo> {
} _DBUserInfo_default_instance_;

namespace protobuf_DB_5fBase_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, uluid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, sacc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, spwd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, stel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, swx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, sqq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, ullastlogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBAccount, ulcreatetime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBUserInfo, uluid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DBUserInfo, snickname_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DBAccount)},
  { 13, -1, sizeof(DBUserInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DBUserInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DB_Base.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _DBAccount_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DBAccount_default_instance_.DefaultConstruct();
  _DBUserInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rDB_Base.proto\022\010PDB_Base\"\211\001\n\tDBAccount\022"
      "\r\n\005uluid\030\001 \001(\004\022\014\n\004sacc\030\002 \001(\t\022\014\n\004spwd\030\003 \001"
      "(\t\022\014\n\004stel\030\004 \001(\t\022\013\n\003swx\030\005 \001(\t\022\013\n\003sqq\030\006 \001"
      "(\t\022\023\n\013ullastlogin\030\007 \001(\004\022\024\n\014ulcreatetime\030"
      "\010 \001(\004\".\n\nDBUserInfo\022\r\n\005uluid\030\001 \001(\004\022\021\n\tsn"
      "ickname\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DB_Base.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DB_5fBase_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBAccount::kUluidFieldNumber;
const int DBAccount::kSaccFieldNumber;
const int DBAccount::kSpwdFieldNumber;
const int DBAccount::kStelFieldNumber;
const int DBAccount::kSwxFieldNumber;
const int DBAccount::kSqqFieldNumber;
const int DBAccount::kUllastloginFieldNumber;
const int DBAccount::kUlcreatetimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBAccount::DBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Base.DBAccount)
}
DBAccount::DBAccount(const DBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sacc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sacc().size() > 0) {
    sacc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sacc_);
  }
  spwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.spwd().size() > 0) {
    spwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spwd_);
  }
  stel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stel().size() > 0) {
    stel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stel_);
  }
  swx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.swx().size() > 0) {
    swx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swx_);
  }
  sqq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sqq().size() > 0) {
    sqq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sqq_);
  }
  ::memcpy(&uluid_, &from.uluid_,
    reinterpret_cast<char*>(&ulcreatetime_) -
    reinterpret_cast<char*>(&uluid_) + sizeof(ulcreatetime_));
  // @@protoc_insertion_point(copy_constructor:PDB_Base.DBAccount)
}

void DBAccount::SharedCtor() {
  sacc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spwd_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swx_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sqq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uluid_, 0, reinterpret_cast<char*>(&ulcreatetime_) -
    reinterpret_cast<char*>(&uluid_) + sizeof(ulcreatetime_));
  _cached_size_ = 0;
}

DBAccount::~DBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Base.DBAccount)
  SharedDtor();
}

void DBAccount::SharedDtor() {
  sacc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spwd_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swx_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sqq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBAccount::descriptor() {
  protobuf_DB_5fBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBAccount& DBAccount::default_instance() {
  protobuf_DB_5fBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBAccount* DBAccount::New(::google::protobuf::Arena* arena) const {
  DBAccount* n = new DBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Base.DBAccount)
  sacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  swx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sqq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uluid_, 0, reinterpret_cast<char*>(&ulcreatetime_) -
    reinterpret_cast<char*>(&uluid_) + sizeof(ulcreatetime_));
}

bool DBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Base.DBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 uluid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uluid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sacc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sacc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sacc().data(), this->sacc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBAccount.sacc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string spwd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_spwd()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->spwd().data(), this->spwd().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBAccount.spwd"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stel().data(), this->stel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBAccount.stel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string swx = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_swx()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->swx().data(), this->swx().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBAccount.swx"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sqq = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sqq()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sqq().data(), this->sqq().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBAccount.sqq"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ullastlogin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ullastlogin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ulcreatetime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ulcreatetime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Base.DBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Base.DBAccount)
  return false;
#undef DO_
}

void DBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Base.DBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uluid(), output);
  }

  // string sacc = 2;
  if (this->sacc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sacc().data(), this->sacc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.sacc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sacc(), output);
  }

  // string spwd = 3;
  if (this->spwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spwd().data(), this->spwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.spwd");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->spwd(), output);
  }

  // string stel = 4;
  if (this->stel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stel().data(), this->stel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.stel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->stel(), output);
  }

  // string swx = 5;
  if (this->swx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swx().data(), this->swx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.swx");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->swx(), output);
  }

  // string sqq = 6;
  if (this->sqq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sqq().data(), this->sqq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.sqq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sqq(), output);
  }

  // uint64 ullastlogin = 7;
  if (this->ullastlogin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->ullastlogin(), output);
  }

  // uint64 ulcreatetime = 8;
  if (this->ulcreatetime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->ulcreatetime(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Base.DBAccount)
}

::google::protobuf::uint8* DBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Base.DBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uluid(), target);
  }

  // string sacc = 2;
  if (this->sacc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sacc().data(), this->sacc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.sacc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sacc(), target);
  }

  // string spwd = 3;
  if (this->spwd().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->spwd().data(), this->spwd().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.spwd");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->spwd(), target);
  }

  // string stel = 4;
  if (this->stel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stel().data(), this->stel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.stel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->stel(), target);
  }

  // string swx = 5;
  if (this->swx().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->swx().data(), this->swx().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.swx");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->swx(), target);
  }

  // string sqq = 6;
  if (this->sqq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sqq().data(), this->sqq().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBAccount.sqq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sqq(), target);
  }

  // uint64 ullastlogin = 7;
  if (this->ullastlogin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->ullastlogin(), target);
  }

  // uint64 ulcreatetime = 8;
  if (this->ulcreatetime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->ulcreatetime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Base.DBAccount)
  return target;
}

size_t DBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Base.DBAccount)
  size_t total_size = 0;

  // string sacc = 2;
  if (this->sacc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sacc());
  }

  // string spwd = 3;
  if (this->spwd().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->spwd());
  }

  // string stel = 4;
  if (this->stel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stel());
  }

  // string swx = 5;
  if (this->swx().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->swx());
  }

  // string sqq = 6;
  if (this->sqq().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sqq());
  }

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uluid());
  }

  // uint64 ullastlogin = 7;
  if (this->ullastlogin() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ullastlogin());
  }

  // uint64 ulcreatetime = 8;
  if (this->ulcreatetime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->ulcreatetime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Base.DBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const DBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Base.DBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Base.DBAccount)
    MergeFrom(*source);
  }
}

void DBAccount::MergeFrom(const DBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Base.DBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sacc().size() > 0) {

    sacc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sacc_);
  }
  if (from.spwd().size() > 0) {

    spwd_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.spwd_);
  }
  if (from.stel().size() > 0) {

    stel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stel_);
  }
  if (from.swx().size() > 0) {

    swx_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.swx_);
  }
  if (from.sqq().size() > 0) {

    sqq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sqq_);
  }
  if (from.uluid() != 0) {
    set_uluid(from.uluid());
  }
  if (from.ullastlogin() != 0) {
    set_ullastlogin(from.ullastlogin());
  }
  if (from.ulcreatetime() != 0) {
    set_ulcreatetime(from.ulcreatetime());
  }
}

void DBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Base.DBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBAccount::CopyFrom(const DBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Base.DBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBAccount::IsInitialized() const {
  return true;
}

void DBAccount::Swap(DBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBAccount::InternalSwap(DBAccount* other) {
  sacc_.Swap(&other->sacc_);
  spwd_.Swap(&other->spwd_);
  stel_.Swap(&other->stel_);
  swx_.Swap(&other->swx_);
  sqq_.Swap(&other->sqq_);
  std::swap(uluid_, other->uluid_);
  std::swap(ullastlogin_, other->ullastlogin_);
  std::swap(ulcreatetime_, other->ulcreatetime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBAccount::GetMetadata() const {
  protobuf_DB_5fBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBAccount

// uint64 uluid = 1;
void DBAccount::clear_uluid() {
  uluid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DBAccount::uluid() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.uluid)
  return uluid_;
}
void DBAccount::set_uluid(::google::protobuf::uint64 value) {
  
  uluid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.uluid)
}

// string sacc = 2;
void DBAccount::clear_sacc() {
  sacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBAccount::sacc() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.sacc)
  return sacc_.GetNoArena();
}
void DBAccount::set_sacc(const ::std::string& value) {
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.sacc)
}
#if LANG_CXX11
void DBAccount::set_sacc(::std::string&& value) {
  
  sacc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.sacc)
}
#endif
void DBAccount::set_sacc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.sacc)
}
void DBAccount::set_sacc(const char* value, size_t size) {
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.sacc)
}
::std::string* DBAccount::mutable_sacc() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.sacc)
  return sacc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBAccount::release_sacc() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.sacc)
  
  return sacc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBAccount::set_allocated_sacc(::std::string* sacc) {
  if (sacc != NULL) {
    
  } else {
    
  }
  sacc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sacc);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.sacc)
}

// string spwd = 3;
void DBAccount::clear_spwd() {
  spwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBAccount::spwd() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.spwd)
  return spwd_.GetNoArena();
}
void DBAccount::set_spwd(const ::std::string& value) {
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.spwd)
}
#if LANG_CXX11
void DBAccount::set_spwd(::std::string&& value) {
  
  spwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.spwd)
}
#endif
void DBAccount::set_spwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.spwd)
}
void DBAccount::set_spwd(const char* value, size_t size) {
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.spwd)
}
::std::string* DBAccount::mutable_spwd() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.spwd)
  return spwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBAccount::release_spwd() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.spwd)
  
  return spwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBAccount::set_allocated_spwd(::std::string* spwd) {
  if (spwd != NULL) {
    
  } else {
    
  }
  spwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spwd);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.spwd)
}

// string stel = 4;
void DBAccount::clear_stel() {
  stel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBAccount::stel() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.stel)
  return stel_.GetNoArena();
}
void DBAccount::set_stel(const ::std::string& value) {
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.stel)
}
#if LANG_CXX11
void DBAccount::set_stel(::std::string&& value) {
  
  stel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.stel)
}
#endif
void DBAccount::set_stel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.stel)
}
void DBAccount::set_stel(const char* value, size_t size) {
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.stel)
}
::std::string* DBAccount::mutable_stel() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.stel)
  return stel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBAccount::release_stel() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.stel)
  
  return stel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBAccount::set_allocated_stel(::std::string* stel) {
  if (stel != NULL) {
    
  } else {
    
  }
  stel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stel);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.stel)
}

// string swx = 5;
void DBAccount::clear_swx() {
  swx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBAccount::swx() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.swx)
  return swx_.GetNoArena();
}
void DBAccount::set_swx(const ::std::string& value) {
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.swx)
}
#if LANG_CXX11
void DBAccount::set_swx(::std::string&& value) {
  
  swx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.swx)
}
#endif
void DBAccount::set_swx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.swx)
}
void DBAccount::set_swx(const char* value, size_t size) {
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.swx)
}
::std::string* DBAccount::mutable_swx() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.swx)
  return swx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBAccount::release_swx() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.swx)
  
  return swx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBAccount::set_allocated_swx(::std::string* swx) {
  if (swx != NULL) {
    
  } else {
    
  }
  swx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swx);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.swx)
}

// string sqq = 6;
void DBAccount::clear_sqq() {
  sqq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBAccount::sqq() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.sqq)
  return sqq_.GetNoArena();
}
void DBAccount::set_sqq(const ::std::string& value) {
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.sqq)
}
#if LANG_CXX11
void DBAccount::set_sqq(::std::string&& value) {
  
  sqq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.sqq)
}
#endif
void DBAccount::set_sqq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.sqq)
}
void DBAccount::set_sqq(const char* value, size_t size) {
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.sqq)
}
::std::string* DBAccount::mutable_sqq() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.sqq)
  return sqq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBAccount::release_sqq() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.sqq)
  
  return sqq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBAccount::set_allocated_sqq(::std::string* sqq) {
  if (sqq != NULL) {
    
  } else {
    
  }
  sqq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sqq);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.sqq)
}

// uint64 ullastlogin = 7;
void DBAccount::clear_ullastlogin() {
  ullastlogin_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DBAccount::ullastlogin() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.ullastlogin)
  return ullastlogin_;
}
void DBAccount::set_ullastlogin(::google::protobuf::uint64 value) {
  
  ullastlogin_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.ullastlogin)
}

// uint64 ulcreatetime = 8;
void DBAccount::clear_ulcreatetime() {
  ulcreatetime_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DBAccount::ulcreatetime() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.ulcreatetime)
  return ulcreatetime_;
}
void DBAccount::set_ulcreatetime(::google::protobuf::uint64 value) {
  
  ulcreatetime_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.ulcreatetime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DBUserInfo::kUluidFieldNumber;
const int DBUserInfo::kSnicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DBUserInfo::DBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fBase_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Base.DBUserInfo)
}
DBUserInfo::DBUserInfo(const DBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  snickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.snickname().size() > 0) {
    snickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snickname_);
  }
  uluid_ = from.uluid_;
  // @@protoc_insertion_point(copy_constructor:PDB_Base.DBUserInfo)
}

void DBUserInfo::SharedCtor() {
  snickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uluid_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

DBUserInfo::~DBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Base.DBUserInfo)
  SharedDtor();
}

void DBUserInfo::SharedDtor() {
  snickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DBUserInfo::descriptor() {
  protobuf_DB_5fBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fBase_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DBUserInfo& DBUserInfo::default_instance() {
  protobuf_DB_5fBase_2eproto::InitDefaults();
  return *internal_default_instance();
}

DBUserInfo* DBUserInfo::New(::google::protobuf::Arena* arena) const {
  DBUserInfo* n = new DBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Base.DBUserInfo)
  snickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uluid_ = GOOGLE_ULONGLONG(0);
}

bool DBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Base.DBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 uluid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uluid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string snickname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snickname().data(), this->snickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PDB_Base.DBUserInfo.snickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Base.DBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Base.DBUserInfo)
  return false;
#undef DO_
}

void DBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Base.DBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uluid(), output);
  }

  // string snickname = 2;
  if (this->snickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snickname().data(), this->snickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBUserInfo.snickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->snickname(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Base.DBUserInfo)
}

::google::protobuf::uint8* DBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Base.DBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uluid(), target);
  }

  // string snickname = 2;
  if (this->snickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snickname().data(), this->snickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PDB_Base.DBUserInfo.snickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->snickname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Base.DBUserInfo)
  return target;
}

size_t DBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Base.DBUserInfo)
  size_t total_size = 0;

  // string snickname = 2;
  if (this->snickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snickname());
  }

  // uint64 uluid = 1;
  if (this->uluid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uluid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Base.DBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Base.DBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Base.DBUserInfo)
    MergeFrom(*source);
  }
}

void DBUserInfo::MergeFrom(const DBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Base.DBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.snickname().size() > 0) {

    snickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snickname_);
  }
  if (from.uluid() != 0) {
    set_uluid(from.uluid());
  }
}

void DBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Base.DBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DBUserInfo::CopyFrom(const DBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Base.DBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DBUserInfo::IsInitialized() const {
  return true;
}

void DBUserInfo::Swap(DBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DBUserInfo::InternalSwap(DBUserInfo* other) {
  snickname_.Swap(&other->snickname_);
  std::swap(uluid_, other->uluid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DBUserInfo::GetMetadata() const {
  protobuf_DB_5fBase_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fBase_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DBUserInfo

// uint64 uluid = 1;
void DBUserInfo::clear_uluid() {
  uluid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 DBUserInfo::uluid() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBUserInfo.uluid)
  return uluid_;
}
void DBUserInfo::set_uluid(::google::protobuf::uint64 value) {
  
  uluid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBUserInfo.uluid)
}

// string snickname = 2;
void DBUserInfo::clear_snickname() {
  snickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& DBUserInfo::snickname() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBUserInfo.snickname)
  return snickname_.GetNoArena();
}
void DBUserInfo::set_snickname(const ::std::string& value) {
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBUserInfo.snickname)
}
#if LANG_CXX11
void DBUserInfo::set_snickname(::std::string&& value) {
  
  snickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBUserInfo.snickname)
}
#endif
void DBUserInfo::set_snickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBUserInfo.snickname)
}
void DBUserInfo::set_snickname(const char* value, size_t size) {
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBUserInfo.snickname)
}
::std::string* DBUserInfo::mutable_snickname() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBUserInfo.snickname)
  return snickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DBUserInfo::release_snickname() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBUserInfo.snickname)
  
  return snickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DBUserInfo::set_allocated_snickname(::std::string* snickname) {
  if (snickname != NULL) {
    
  } else {
    
  }
  snickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snickname);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBUserInfo.snickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PDB_Base

// @@protoc_insertion_point(global_scope)
