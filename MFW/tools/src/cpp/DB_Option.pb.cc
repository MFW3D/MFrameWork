// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DB_Option.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DB_Option.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PDB_Option {
class GD_GetDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_GetDBAccount> {
} _GD_GetDBAccount_default_instance_;
class DG_GetDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_GetDBAccount> {
} _DG_GetDBAccount_default_instance_;
class GD_CreateDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_CreateDBAccount> {
} _GD_CreateDBAccount_default_instance_;
class DG_CreateDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_CreateDBAccount> {
} _DG_CreateDBAccount_default_instance_;
class GD_UpdateDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_UpdateDBAccount> {
} _GD_UpdateDBAccount_default_instance_;
class DG_UpdateDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_UpdateDBAccount> {
} _DG_UpdateDBAccount_default_instance_;
class GD_DeleteDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_DeleteDBAccount> {
} _GD_DeleteDBAccount_default_instance_;
class DG_DeleteDBAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_DeleteDBAccount> {
} _DG_DeleteDBAccount_default_instance_;
class GD_GetDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_GetDBUserInfo> {
} _GD_GetDBUserInfo_default_instance_;
class DG_GetDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_GetDBUserInfo> {
} _DG_GetDBUserInfo_default_instance_;
class GD_CreateDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_CreateDBUserInfo> {
} _GD_CreateDBUserInfo_default_instance_;
class DG_CreateDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_CreateDBUserInfo> {
} _DG_CreateDBUserInfo_default_instance_;
class GD_UpdateDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_UpdateDBUserInfo> {
} _GD_UpdateDBUserInfo_default_instance_;
class DG_UpdateDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_UpdateDBUserInfo> {
} _DG_UpdateDBUserInfo_default_instance_;
class GD_DeleteDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GD_DeleteDBUserInfo> {
} _GD_DeleteDBUserInfo_default_instance_;
class DG_DeleteDBUserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DG_DeleteDBUserInfo> {
} _DG_DeleteDBUserInfo_default_instance_;

namespace protobuf_DB_5fOption_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBAccount, uldbaccountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBAccount, iret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBAccount, stdbaccount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBAccount, stdbaccount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBAccount, iret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBAccount, stdbaccount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBAccount, stdbaccount_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBAccount, iret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBAccount, uldbaccountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBAccount, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBAccount, iret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_GetDBUserInfo, uldbuserinfoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBUserInfo, iret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_GetDBUserInfo, stdbuserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_CreateDBUserInfo, stdbuserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBUserInfo, iret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_CreateDBUserInfo, stdbuserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_UpdateDBUserInfo, stdbuserinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_UpdateDBUserInfo, iret_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GD_DeleteDBUserInfo, uldbuserinfoid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBUserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBUserInfo, uiaccid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DG_DeleteDBUserInfo, iret_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(GD_GetDBAccount)},
  { 7, -1, sizeof(DG_GetDBAccount)},
  { 15, -1, sizeof(GD_CreateDBAccount)},
  { 22, -1, sizeof(DG_CreateDBAccount)},
  { 30, -1, sizeof(GD_UpdateDBAccount)},
  { 37, -1, sizeof(DG_UpdateDBAccount)},
  { 44, -1, sizeof(GD_DeleteDBAccount)},
  { 51, -1, sizeof(DG_DeleteDBAccount)},
  { 58, -1, sizeof(GD_GetDBUserInfo)},
  { 65, -1, sizeof(DG_GetDBUserInfo)},
  { 73, -1, sizeof(GD_CreateDBUserInfo)},
  { 80, -1, sizeof(DG_CreateDBUserInfo)},
  { 88, -1, sizeof(GD_UpdateDBUserInfo)},
  { 95, -1, sizeof(DG_UpdateDBUserInfo)},
  { 102, -1, sizeof(GD_DeleteDBUserInfo)},
  { 109, -1, sizeof(DG_DeleteDBUserInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_GetDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_GetDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_CreateDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_CreateDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_UpdateDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_UpdateDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_DeleteDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_DeleteDBAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_GetDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_GetDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_CreateDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_CreateDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_UpdateDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_UpdateDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GD_DeleteDBUserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DG_DeleteDBUserInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DB_Option.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void TableStruct::Shutdown() {
  _GD_GetDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DG_GetDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _GD_CreateDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _DG_CreateDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _GD_UpdateDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _DG_UpdateDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _GD_DeleteDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _DG_DeleteDBAccount_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _GD_GetDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _DG_GetDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _GD_CreateDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _DG_CreateDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _GD_UpdateDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _DG_UpdateDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GD_DeleteDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _DG_DeleteDBUserInfo_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::PDB_Base::protobuf_DB_5fBase_2eproto::InitDefaults();
  _GD_GetDBAccount_default_instance_.DefaultConstruct();
  _DG_GetDBAccount_default_instance_.DefaultConstruct();
  _GD_CreateDBAccount_default_instance_.DefaultConstruct();
  _DG_CreateDBAccount_default_instance_.DefaultConstruct();
  _GD_UpdateDBAccount_default_instance_.DefaultConstruct();
  _DG_UpdateDBAccount_default_instance_.DefaultConstruct();
  _GD_DeleteDBAccount_default_instance_.DefaultConstruct();
  _DG_DeleteDBAccount_default_instance_.DefaultConstruct();
  _GD_GetDBUserInfo_default_instance_.DefaultConstruct();
  _DG_GetDBUserInfo_default_instance_.DefaultConstruct();
  _GD_CreateDBUserInfo_default_instance_.DefaultConstruct();
  _DG_CreateDBUserInfo_default_instance_.DefaultConstruct();
  _GD_UpdateDBUserInfo_default_instance_.DefaultConstruct();
  _DG_UpdateDBUserInfo_default_instance_.DefaultConstruct();
  _GD_DeleteDBUserInfo_default_instance_.DefaultConstruct();
  _DG_DeleteDBUserInfo_default_instance_.DefaultConstruct();
  _DG_GetDBAccount_default_instance_.get_mutable()->stdbaccount_ = const_cast< ::PDB_Base::DBAccount*>(
      ::PDB_Base::DBAccount::internal_default_instance());
  _GD_CreateDBAccount_default_instance_.get_mutable()->stdbaccount_ = const_cast< ::PDB_Base::DBAccount*>(
      ::PDB_Base::DBAccount::internal_default_instance());
  _DG_CreateDBAccount_default_instance_.get_mutable()->stdbaccount_ = const_cast< ::PDB_Base::DBAccount*>(
      ::PDB_Base::DBAccount::internal_default_instance());
  _GD_UpdateDBAccount_default_instance_.get_mutable()->stdbaccount_ = const_cast< ::PDB_Base::DBAccount*>(
      ::PDB_Base::DBAccount::internal_default_instance());
  _DG_GetDBUserInfo_default_instance_.get_mutable()->stdbuserinfo_ = const_cast< ::PDB_Base::DBUserInfo*>(
      ::PDB_Base::DBUserInfo::internal_default_instance());
  _GD_CreateDBUserInfo_default_instance_.get_mutable()->stdbuserinfo_ = const_cast< ::PDB_Base::DBUserInfo*>(
      ::PDB_Base::DBUserInfo::internal_default_instance());
  _DG_CreateDBUserInfo_default_instance_.get_mutable()->stdbuserinfo_ = const_cast< ::PDB_Base::DBUserInfo*>(
      ::PDB_Base::DBUserInfo::internal_default_instance());
  _GD_UpdateDBUserInfo_default_instance_.get_mutable()->stdbuserinfo_ = const_cast< ::PDB_Base::DBUserInfo*>(
      ::PDB_Base::DBUserInfo::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017DB_Option.proto\022\nPDB_Option\032\rDB_Base.p"
      "roto\"9\n\017GD_GetDBAccount\022\017\n\007uiaccid\030\001 \001(\r"
      "\022\025\n\rulDBAccountid\030\002 \001(\004\"Z\n\017DG_GetDBAccou"
      "nt\022\017\n\007uiaccid\030\001 \001(\r\022\014\n\004iRet\030\002 \001(\005\022(\n\013stD"
      "BAccount\030\003 \001(\0132\023.PDB_Base.DBAccount\"O\n\022G"
      "D_CreateDBAccount\022\017\n\007uiaccid\030\001 \001(\r\022(\n\013st"
      "DBAccount\030\002 \001(\0132\023.PDB_Base.DBAccount\"]\n\022"
      "DG_CreateDBAccount\022\017\n\007uiaccid\030\001 \001(\r\022\014\n\004i"
      "Ret\030\002 \001(\005\022(\n\013stDBAccount\030\003 \001(\0132\023.PDB_Bas"
      "e.DBAccount\"O\n\022GD_UpdateDBAccount\022\017\n\007uia"
      "ccid\030\001 \001(\r\022(\n\013stDBAccount\030\002 \001(\0132\023.PDB_Ba"
      "se.DBAccount\"3\n\022DG_UpdateDBAccount\022\017\n\007ui"
      "accid\030\001 \001(\r\022\014\n\004iRet\030\002 \001(\005\"<\n\022GD_DeleteDB"
      "Account\022\017\n\007uiaccid\030\001 \001(\r\022\025\n\rulDBAccounti"
      "d\030\002 \001(\004\"3\n\022DG_DeleteDBAccount\022\017\n\007uiaccid"
      "\030\001 \001(\r\022\014\n\004iRet\030\002 \001(\005\";\n\020GD_GetDBUserInfo"
      "\022\017\n\007uiaccid\030\001 \001(\r\022\026\n\016ulDBUserInfoid\030\002 \001("
      "\004\"]\n\020DG_GetDBUserInfo\022\017\n\007uiaccid\030\001 \001(\r\022\014"
      "\n\004iRet\030\002 \001(\005\022*\n\014stDBUserInfo\030\003 \001(\0132\024.PDB"
      "_Base.DBUserInfo\"R\n\023GD_CreateDBUserInfo\022"
      "\017\n\007uiaccid\030\001 \001(\r\022*\n\014stDBUserInfo\030\002 \001(\0132\024"
      ".PDB_Base.DBUserInfo\"`\n\023DG_CreateDBUserI"
      "nfo\022\017\n\007uiaccid\030\001 \001(\r\022\014\n\004iRet\030\002 \001(\005\022*\n\014st"
      "DBUserInfo\030\003 \001(\0132\024.PDB_Base.DBUserInfo\"R"
      "\n\023GD_UpdateDBUserInfo\022\017\n\007uiaccid\030\001 \001(\r\022*"
      "\n\014stDBUserInfo\030\002 \001(\0132\024.PDB_Base.DBUserIn"
      "fo\"4\n\023DG_UpdateDBUserInfo\022\017\n\007uiaccid\030\001 \001"
      "(\r\022\014\n\004iRet\030\002 \001(\005\">\n\023GD_DeleteDBUserInfo\022"
      "\017\n\007uiaccid\030\001 \001(\r\022\026\n\016ulDBUserInfoid\030\002 \001(\004"
      "\"4\n\023DG_DeleteDBUserInfo\022\017\n\007uiaccid\030\001 \001(\r"
      "\022\014\n\004iRet\030\002 \001(\005*\266\003\n\007EDB_CMD\022\017\n\013DB_CMD_NON"
      "E\020\000\022\025\n\020GD_GET_DBACCOUNT\020\312\001\022\025\n\020DG_GET_DBA"
      "CCOUNT\020\313\001\022\030\n\023GD_CREATE_DBACCOUNT\020\314\001\022\030\n\023D"
      "G_CREATE_DBACCOUNT\020\315\001\022\030\n\023GD_UPDATE_DBACC"
      "OUNT\020\316\001\022\030\n\023DG_UPDATE_DBACCOUNT\020\317\001\022\030\n\023GD_"
      "DELETE_DBACCOUNT\020\320\001\022\030\n\023DG_DELETE_DBACCOU"
      "NT\020\321\001\022\026\n\021GD_GET_DBUSERINFO\020\322\001\022\026\n\021DG_GET_"
      "DBUSERINFO\020\323\001\022\031\n\024GD_CREATE_DBUSERINFO\020\324\001"
      "\022\031\n\024DG_CREATE_DBUSERINFO\020\325\001\022\031\n\024GD_UPDATE"
      "_DBUSERINFO\020\326\001\022\031\n\024DG_UPDATE_DBUSERINFO\020\327"
      "\001\022\031\n\024GD_DELETE_DBUSERINFO\020\330\001\022\031\n\024DG_DELET"
      "E_DBUSERINFO\020\331\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1663);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DB_Option.proto", &protobuf_RegisterTypes);
  ::PDB_Base::protobuf_DB_5fBase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DB_5fOption_2eproto

const ::google::protobuf::EnumDescriptor* EDB_CMD_descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_enum_descriptors[0];
}
bool EDB_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 213:
    case 214:
    case 215:
    case 216:
    case 217:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_GetDBAccount::kUiaccidFieldNumber;
const int GD_GetDBAccount::kUlDBAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_GetDBAccount::GD_GetDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_GetDBAccount)
}
GD_GetDBAccount::GD_GetDBAccount(const GD_GetDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uldbaccountid_, &from.uldbaccountid_,
    reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_GetDBAccount)
}

void GD_GetDBAccount::SharedCtor() {
  ::memset(&uldbaccountid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_GetDBAccount::~GD_GetDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_GetDBAccount)
  SharedDtor();
}

void GD_GetDBAccount::SharedDtor() {
}

void GD_GetDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_GetDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_GetDBAccount& GD_GetDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_GetDBAccount* GD_GetDBAccount::New(::google::protobuf::Arena* arena) const {
  GD_GetDBAccount* n = new GD_GetDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_GetDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_GetDBAccount)
  ::memset(&uldbaccountid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
}

bool GD_GetDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_GetDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ulDBAccountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uldbaccountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_GetDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_GetDBAccount)
  return false;
#undef DO_
}

void GD_GetDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_GetDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uldbaccountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_GetDBAccount)
}

::google::protobuf::uint8* GD_GetDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_GetDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uldbaccountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_GetDBAccount)
  return target;
}

size_t GD_GetDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_GetDBAccount)
  size_t total_size = 0;

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uldbaccountid());
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_GetDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_GetDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_GetDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_GetDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_GetDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_GetDBAccount)
    MergeFrom(*source);
  }
}

void GD_GetDBAccount::MergeFrom(const GD_GetDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_GetDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uldbaccountid() != 0) {
    set_uldbaccountid(from.uldbaccountid());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_GetDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_GetDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_GetDBAccount::CopyFrom(const GD_GetDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_GetDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_GetDBAccount::IsInitialized() const {
  return true;
}

void GD_GetDBAccount::Swap(GD_GetDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_GetDBAccount::InternalSwap(GD_GetDBAccount* other) {
  std::swap(uldbaccountid_, other->uldbaccountid_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_GetDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_GetDBAccount

// uint32 uiaccid = 1;
void GD_GetDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_GetDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_GetDBAccount.uiaccid)
  return uiaccid_;
}
void GD_GetDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_GetDBAccount.uiaccid)
}

// uint64 ulDBAccountid = 2;
void GD_GetDBAccount::clear_uldbaccountid() {
  uldbaccountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GD_GetDBAccount::uldbaccountid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_GetDBAccount.ulDBAccountid)
  return uldbaccountid_;
}
void GD_GetDBAccount::set_uldbaccountid(::google::protobuf::uint64 value) {
  
  uldbaccountid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_GetDBAccount.ulDBAccountid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_GetDBAccount::kUiaccidFieldNumber;
const int DG_GetDBAccount::kIRetFieldNumber;
const int DG_GetDBAccount::kStDBAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_GetDBAccount::DG_GetDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_GetDBAccount)
}
DG_GetDBAccount::DG_GetDBAccount(const DG_GetDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbaccount()) {
    stdbaccount_ = new ::PDB_Base::DBAccount(*from.stdbaccount_);
  } else {
    stdbaccount_ = NULL;
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_GetDBAccount)
}

void DG_GetDBAccount::SharedCtor() {
  ::memset(&stdbaccount_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&stdbaccount_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_GetDBAccount::~DG_GetDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_GetDBAccount)
  SharedDtor();
}

void DG_GetDBAccount::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbaccount_;
  }
}

void DG_GetDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_GetDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_GetDBAccount& DG_GetDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_GetDBAccount* DG_GetDBAccount::New(::google::protobuf::Arena* arena) const {
  DG_GetDBAccount* n = new DG_GetDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_GetDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_GetDBAccount)
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) {
    delete stdbaccount_;
  }
  stdbaccount_ = NULL;
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_GetDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_GetDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBAccount stDBAccount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_GetDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_GetDBAccount)
  return false;
#undef DO_
}

void DG_GetDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_GetDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stdbaccount_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_GetDBAccount)
}

::google::protobuf::uint8* DG_GetDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_GetDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->stdbaccount_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_GetDBAccount)
  return target;
}

size_t DG_GetDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_GetDBAccount)
  size_t total_size = 0;

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbaccount_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_GetDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_GetDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_GetDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_GetDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_GetDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_GetDBAccount)
    MergeFrom(*source);
  }
}

void DG_GetDBAccount::MergeFrom(const DG_GetDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_GetDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbaccount()) {
    mutable_stdbaccount()->::PDB_Base::DBAccount::MergeFrom(from.stdbaccount());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_GetDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_GetDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_GetDBAccount::CopyFrom(const DG_GetDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_GetDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_GetDBAccount::IsInitialized() const {
  return true;
}

void DG_GetDBAccount::Swap(DG_GetDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_GetDBAccount::InternalSwap(DG_GetDBAccount* other) {
  std::swap(stdbaccount_, other->stdbaccount_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_GetDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_GetDBAccount

// uint32 uiaccid = 1;
void DG_GetDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_GetDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBAccount.uiaccid)
  return uiaccid_;
}
void DG_GetDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_GetDBAccount.uiaccid)
}

// int32 iRet = 2;
void DG_GetDBAccount::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_GetDBAccount::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBAccount.iRet)
  return iret_;
}
void DG_GetDBAccount::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_GetDBAccount.iRet)
}

// .PDB_Base.DBAccount stDBAccount = 3;
bool DG_GetDBAccount::has_stdbaccount() const {
  return this != internal_default_instance() && stdbaccount_ != NULL;
}
void DG_GetDBAccount::clear_stdbaccount() {
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) delete stdbaccount_;
  stdbaccount_ = NULL;
}
const ::PDB_Base::DBAccount& DG_GetDBAccount::stdbaccount() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBAccount.stDBAccount)
  return stdbaccount_ != NULL ? *stdbaccount_
                         : *::PDB_Base::DBAccount::internal_default_instance();
}
::PDB_Base::DBAccount* DG_GetDBAccount::mutable_stdbaccount() {
  
  if (stdbaccount_ == NULL) {
    stdbaccount_ = new ::PDB_Base::DBAccount;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.DG_GetDBAccount.stDBAccount)
  return stdbaccount_;
}
::PDB_Base::DBAccount* DG_GetDBAccount::release_stdbaccount() {
  // @@protoc_insertion_point(field_release:PDB_Option.DG_GetDBAccount.stDBAccount)
  
  ::PDB_Base::DBAccount* temp = stdbaccount_;
  stdbaccount_ = NULL;
  return temp;
}
void DG_GetDBAccount::set_allocated_stdbaccount(::PDB_Base::DBAccount* stdbaccount) {
  delete stdbaccount_;
  stdbaccount_ = stdbaccount;
  if (stdbaccount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.DG_GetDBAccount.stDBAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_CreateDBAccount::kUiaccidFieldNumber;
const int GD_CreateDBAccount::kStDBAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_CreateDBAccount::GD_CreateDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_CreateDBAccount)
}
GD_CreateDBAccount::GD_CreateDBAccount(const GD_CreateDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbaccount()) {
    stdbaccount_ = new ::PDB_Base::DBAccount(*from.stdbaccount_);
  } else {
    stdbaccount_ = NULL;
  }
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_CreateDBAccount)
}

void GD_CreateDBAccount::SharedCtor() {
  ::memset(&stdbaccount_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&stdbaccount_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_CreateDBAccount::~GD_CreateDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_CreateDBAccount)
  SharedDtor();
}

void GD_CreateDBAccount::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbaccount_;
  }
}

void GD_CreateDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_CreateDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_CreateDBAccount& GD_CreateDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_CreateDBAccount* GD_CreateDBAccount::New(::google::protobuf::Arena* arena) const {
  GD_CreateDBAccount* n = new GD_CreateDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_CreateDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_CreateDBAccount)
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) {
    delete stdbaccount_;
  }
  stdbaccount_ = NULL;
  uiaccid_ = 0u;
}

bool GD_CreateDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_CreateDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBAccount stDBAccount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_CreateDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_CreateDBAccount)
  return false;
#undef DO_
}

void GD_CreateDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_CreateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stdbaccount_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_CreateDBAccount)
}

::google::protobuf::uint8* GD_CreateDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_CreateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->stdbaccount_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_CreateDBAccount)
  return target;
}

size_t GD_CreateDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_CreateDBAccount)
  size_t total_size = 0;

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbaccount_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_CreateDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_CreateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_CreateDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_CreateDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_CreateDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_CreateDBAccount)
    MergeFrom(*source);
  }
}

void GD_CreateDBAccount::MergeFrom(const GD_CreateDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_CreateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbaccount()) {
    mutable_stdbaccount()->::PDB_Base::DBAccount::MergeFrom(from.stdbaccount());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_CreateDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_CreateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_CreateDBAccount::CopyFrom(const GD_CreateDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_CreateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_CreateDBAccount::IsInitialized() const {
  return true;
}

void GD_CreateDBAccount::Swap(GD_CreateDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_CreateDBAccount::InternalSwap(GD_CreateDBAccount* other) {
  std::swap(stdbaccount_, other->stdbaccount_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_CreateDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_CreateDBAccount

// uint32 uiaccid = 1;
void GD_CreateDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_CreateDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_CreateDBAccount.uiaccid)
  return uiaccid_;
}
void GD_CreateDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_CreateDBAccount.uiaccid)
}

// .PDB_Base.DBAccount stDBAccount = 2;
bool GD_CreateDBAccount::has_stdbaccount() const {
  return this != internal_default_instance() && stdbaccount_ != NULL;
}
void GD_CreateDBAccount::clear_stdbaccount() {
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) delete stdbaccount_;
  stdbaccount_ = NULL;
}
const ::PDB_Base::DBAccount& GD_CreateDBAccount::stdbaccount() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_CreateDBAccount.stDBAccount)
  return stdbaccount_ != NULL ? *stdbaccount_
                         : *::PDB_Base::DBAccount::internal_default_instance();
}
::PDB_Base::DBAccount* GD_CreateDBAccount::mutable_stdbaccount() {
  
  if (stdbaccount_ == NULL) {
    stdbaccount_ = new ::PDB_Base::DBAccount;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.GD_CreateDBAccount.stDBAccount)
  return stdbaccount_;
}
::PDB_Base::DBAccount* GD_CreateDBAccount::release_stdbaccount() {
  // @@protoc_insertion_point(field_release:PDB_Option.GD_CreateDBAccount.stDBAccount)
  
  ::PDB_Base::DBAccount* temp = stdbaccount_;
  stdbaccount_ = NULL;
  return temp;
}
void GD_CreateDBAccount::set_allocated_stdbaccount(::PDB_Base::DBAccount* stdbaccount) {
  delete stdbaccount_;
  stdbaccount_ = stdbaccount;
  if (stdbaccount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.GD_CreateDBAccount.stDBAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_CreateDBAccount::kUiaccidFieldNumber;
const int DG_CreateDBAccount::kIRetFieldNumber;
const int DG_CreateDBAccount::kStDBAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_CreateDBAccount::DG_CreateDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_CreateDBAccount)
}
DG_CreateDBAccount::DG_CreateDBAccount(const DG_CreateDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbaccount()) {
    stdbaccount_ = new ::PDB_Base::DBAccount(*from.stdbaccount_);
  } else {
    stdbaccount_ = NULL;
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_CreateDBAccount)
}

void DG_CreateDBAccount::SharedCtor() {
  ::memset(&stdbaccount_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&stdbaccount_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_CreateDBAccount::~DG_CreateDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_CreateDBAccount)
  SharedDtor();
}

void DG_CreateDBAccount::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbaccount_;
  }
}

void DG_CreateDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_CreateDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_CreateDBAccount& DG_CreateDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_CreateDBAccount* DG_CreateDBAccount::New(::google::protobuf::Arena* arena) const {
  DG_CreateDBAccount* n = new DG_CreateDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_CreateDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_CreateDBAccount)
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) {
    delete stdbaccount_;
  }
  stdbaccount_ = NULL;
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_CreateDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_CreateDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBAccount stDBAccount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_CreateDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_CreateDBAccount)
  return false;
#undef DO_
}

void DG_CreateDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_CreateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stdbaccount_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_CreateDBAccount)
}

::google::protobuf::uint8* DG_CreateDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_CreateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->stdbaccount_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_CreateDBAccount)
  return target;
}

size_t DG_CreateDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_CreateDBAccount)
  size_t total_size = 0;

  // .PDB_Base.DBAccount stDBAccount = 3;
  if (this->has_stdbaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbaccount_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_CreateDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_CreateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_CreateDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_CreateDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_CreateDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_CreateDBAccount)
    MergeFrom(*source);
  }
}

void DG_CreateDBAccount::MergeFrom(const DG_CreateDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_CreateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbaccount()) {
    mutable_stdbaccount()->::PDB_Base::DBAccount::MergeFrom(from.stdbaccount());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_CreateDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_CreateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_CreateDBAccount::CopyFrom(const DG_CreateDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_CreateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_CreateDBAccount::IsInitialized() const {
  return true;
}

void DG_CreateDBAccount::Swap(DG_CreateDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_CreateDBAccount::InternalSwap(DG_CreateDBAccount* other) {
  std::swap(stdbaccount_, other->stdbaccount_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_CreateDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_CreateDBAccount

// uint32 uiaccid = 1;
void DG_CreateDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_CreateDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBAccount.uiaccid)
  return uiaccid_;
}
void DG_CreateDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_CreateDBAccount.uiaccid)
}

// int32 iRet = 2;
void DG_CreateDBAccount::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_CreateDBAccount::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBAccount.iRet)
  return iret_;
}
void DG_CreateDBAccount::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_CreateDBAccount.iRet)
}

// .PDB_Base.DBAccount stDBAccount = 3;
bool DG_CreateDBAccount::has_stdbaccount() const {
  return this != internal_default_instance() && stdbaccount_ != NULL;
}
void DG_CreateDBAccount::clear_stdbaccount() {
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) delete stdbaccount_;
  stdbaccount_ = NULL;
}
const ::PDB_Base::DBAccount& DG_CreateDBAccount::stdbaccount() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBAccount.stDBAccount)
  return stdbaccount_ != NULL ? *stdbaccount_
                         : *::PDB_Base::DBAccount::internal_default_instance();
}
::PDB_Base::DBAccount* DG_CreateDBAccount::mutable_stdbaccount() {
  
  if (stdbaccount_ == NULL) {
    stdbaccount_ = new ::PDB_Base::DBAccount;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.DG_CreateDBAccount.stDBAccount)
  return stdbaccount_;
}
::PDB_Base::DBAccount* DG_CreateDBAccount::release_stdbaccount() {
  // @@protoc_insertion_point(field_release:PDB_Option.DG_CreateDBAccount.stDBAccount)
  
  ::PDB_Base::DBAccount* temp = stdbaccount_;
  stdbaccount_ = NULL;
  return temp;
}
void DG_CreateDBAccount::set_allocated_stdbaccount(::PDB_Base::DBAccount* stdbaccount) {
  delete stdbaccount_;
  stdbaccount_ = stdbaccount;
  if (stdbaccount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.DG_CreateDBAccount.stDBAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_UpdateDBAccount::kUiaccidFieldNumber;
const int GD_UpdateDBAccount::kStDBAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_UpdateDBAccount::GD_UpdateDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_UpdateDBAccount)
}
GD_UpdateDBAccount::GD_UpdateDBAccount(const GD_UpdateDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbaccount()) {
    stdbaccount_ = new ::PDB_Base::DBAccount(*from.stdbaccount_);
  } else {
    stdbaccount_ = NULL;
  }
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_UpdateDBAccount)
}

void GD_UpdateDBAccount::SharedCtor() {
  ::memset(&stdbaccount_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&stdbaccount_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_UpdateDBAccount::~GD_UpdateDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_UpdateDBAccount)
  SharedDtor();
}

void GD_UpdateDBAccount::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbaccount_;
  }
}

void GD_UpdateDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_UpdateDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_UpdateDBAccount& GD_UpdateDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_UpdateDBAccount* GD_UpdateDBAccount::New(::google::protobuf::Arena* arena) const {
  GD_UpdateDBAccount* n = new GD_UpdateDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_UpdateDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_UpdateDBAccount)
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) {
    delete stdbaccount_;
  }
  stdbaccount_ = NULL;
  uiaccid_ = 0u;
}

bool GD_UpdateDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_UpdateDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBAccount stDBAccount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbaccount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_UpdateDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_UpdateDBAccount)
  return false;
#undef DO_
}

void GD_UpdateDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_UpdateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stdbaccount_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_UpdateDBAccount)
}

::google::protobuf::uint8* GD_UpdateDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_UpdateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->stdbaccount_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_UpdateDBAccount)
  return target;
}

size_t GD_UpdateDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_UpdateDBAccount)
  size_t total_size = 0;

  // .PDB_Base.DBAccount stDBAccount = 2;
  if (this->has_stdbaccount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbaccount_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_UpdateDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_UpdateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_UpdateDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_UpdateDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_UpdateDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_UpdateDBAccount)
    MergeFrom(*source);
  }
}

void GD_UpdateDBAccount::MergeFrom(const GD_UpdateDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_UpdateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbaccount()) {
    mutable_stdbaccount()->::PDB_Base::DBAccount::MergeFrom(from.stdbaccount());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_UpdateDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_UpdateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_UpdateDBAccount::CopyFrom(const GD_UpdateDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_UpdateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_UpdateDBAccount::IsInitialized() const {
  return true;
}

void GD_UpdateDBAccount::Swap(GD_UpdateDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_UpdateDBAccount::InternalSwap(GD_UpdateDBAccount* other) {
  std::swap(stdbaccount_, other->stdbaccount_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_UpdateDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_UpdateDBAccount

// uint32 uiaccid = 1;
void GD_UpdateDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_UpdateDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_UpdateDBAccount.uiaccid)
  return uiaccid_;
}
void GD_UpdateDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_UpdateDBAccount.uiaccid)
}

// .PDB_Base.DBAccount stDBAccount = 2;
bool GD_UpdateDBAccount::has_stdbaccount() const {
  return this != internal_default_instance() && stdbaccount_ != NULL;
}
void GD_UpdateDBAccount::clear_stdbaccount() {
  if (GetArenaNoVirtual() == NULL && stdbaccount_ != NULL) delete stdbaccount_;
  stdbaccount_ = NULL;
}
const ::PDB_Base::DBAccount& GD_UpdateDBAccount::stdbaccount() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_UpdateDBAccount.stDBAccount)
  return stdbaccount_ != NULL ? *stdbaccount_
                         : *::PDB_Base::DBAccount::internal_default_instance();
}
::PDB_Base::DBAccount* GD_UpdateDBAccount::mutable_stdbaccount() {
  
  if (stdbaccount_ == NULL) {
    stdbaccount_ = new ::PDB_Base::DBAccount;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.GD_UpdateDBAccount.stDBAccount)
  return stdbaccount_;
}
::PDB_Base::DBAccount* GD_UpdateDBAccount::release_stdbaccount() {
  // @@protoc_insertion_point(field_release:PDB_Option.GD_UpdateDBAccount.stDBAccount)
  
  ::PDB_Base::DBAccount* temp = stdbaccount_;
  stdbaccount_ = NULL;
  return temp;
}
void GD_UpdateDBAccount::set_allocated_stdbaccount(::PDB_Base::DBAccount* stdbaccount) {
  delete stdbaccount_;
  stdbaccount_ = stdbaccount;
  if (stdbaccount) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.GD_UpdateDBAccount.stDBAccount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_UpdateDBAccount::kUiaccidFieldNumber;
const int DG_UpdateDBAccount::kIRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_UpdateDBAccount::DG_UpdateDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_UpdateDBAccount)
}
DG_UpdateDBAccount::DG_UpdateDBAccount(const DG_UpdateDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_UpdateDBAccount)
}

void DG_UpdateDBAccount::SharedCtor() {
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_UpdateDBAccount::~DG_UpdateDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_UpdateDBAccount)
  SharedDtor();
}

void DG_UpdateDBAccount::SharedDtor() {
}

void DG_UpdateDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_UpdateDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_UpdateDBAccount& DG_UpdateDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_UpdateDBAccount* DG_UpdateDBAccount::New(::google::protobuf::Arena* arena) const {
  DG_UpdateDBAccount* n = new DG_UpdateDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_UpdateDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_UpdateDBAccount)
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_UpdateDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_UpdateDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_UpdateDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_UpdateDBAccount)
  return false;
#undef DO_
}

void DG_UpdateDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_UpdateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_UpdateDBAccount)
}

::google::protobuf::uint8* DG_UpdateDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_UpdateDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_UpdateDBAccount)
  return target;
}

size_t DG_UpdateDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_UpdateDBAccount)
  size_t total_size = 0;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_UpdateDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_UpdateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_UpdateDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_UpdateDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_UpdateDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_UpdateDBAccount)
    MergeFrom(*source);
  }
}

void DG_UpdateDBAccount::MergeFrom(const DG_UpdateDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_UpdateDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_UpdateDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_UpdateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_UpdateDBAccount::CopyFrom(const DG_UpdateDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_UpdateDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_UpdateDBAccount::IsInitialized() const {
  return true;
}

void DG_UpdateDBAccount::Swap(DG_UpdateDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_UpdateDBAccount::InternalSwap(DG_UpdateDBAccount* other) {
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_UpdateDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_UpdateDBAccount

// uint32 uiaccid = 1;
void DG_UpdateDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_UpdateDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_UpdateDBAccount.uiaccid)
  return uiaccid_;
}
void DG_UpdateDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_UpdateDBAccount.uiaccid)
}

// int32 iRet = 2;
void DG_UpdateDBAccount::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_UpdateDBAccount::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_UpdateDBAccount.iRet)
  return iret_;
}
void DG_UpdateDBAccount::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_UpdateDBAccount.iRet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_DeleteDBAccount::kUiaccidFieldNumber;
const int GD_DeleteDBAccount::kUlDBAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_DeleteDBAccount::GD_DeleteDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_DeleteDBAccount)
}
GD_DeleteDBAccount::GD_DeleteDBAccount(const GD_DeleteDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uldbaccountid_, &from.uldbaccountid_,
    reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_DeleteDBAccount)
}

void GD_DeleteDBAccount::SharedCtor() {
  ::memset(&uldbaccountid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_DeleteDBAccount::~GD_DeleteDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_DeleteDBAccount)
  SharedDtor();
}

void GD_DeleteDBAccount::SharedDtor() {
}

void GD_DeleteDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_DeleteDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_DeleteDBAccount& GD_DeleteDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_DeleteDBAccount* GD_DeleteDBAccount::New(::google::protobuf::Arena* arena) const {
  GD_DeleteDBAccount* n = new GD_DeleteDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_DeleteDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_DeleteDBAccount)
  ::memset(&uldbaccountid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbaccountid_) + sizeof(uiaccid_));
}

bool GD_DeleteDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_DeleteDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ulDBAccountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uldbaccountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_DeleteDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_DeleteDBAccount)
  return false;
#undef DO_
}

void GD_DeleteDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_DeleteDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uldbaccountid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_DeleteDBAccount)
}

::google::protobuf::uint8* GD_DeleteDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_DeleteDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uldbaccountid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_DeleteDBAccount)
  return target;
}

size_t GD_DeleteDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_DeleteDBAccount)
  size_t total_size = 0;

  // uint64 ulDBAccountid = 2;
  if (this->uldbaccountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uldbaccountid());
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_DeleteDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_DeleteDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_DeleteDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_DeleteDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_DeleteDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_DeleteDBAccount)
    MergeFrom(*source);
  }
}

void GD_DeleteDBAccount::MergeFrom(const GD_DeleteDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_DeleteDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uldbaccountid() != 0) {
    set_uldbaccountid(from.uldbaccountid());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_DeleteDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_DeleteDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_DeleteDBAccount::CopyFrom(const GD_DeleteDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_DeleteDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_DeleteDBAccount::IsInitialized() const {
  return true;
}

void GD_DeleteDBAccount::Swap(GD_DeleteDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_DeleteDBAccount::InternalSwap(GD_DeleteDBAccount* other) {
  std::swap(uldbaccountid_, other->uldbaccountid_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_DeleteDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_DeleteDBAccount

// uint32 uiaccid = 1;
void GD_DeleteDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_DeleteDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_DeleteDBAccount.uiaccid)
  return uiaccid_;
}
void GD_DeleteDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_DeleteDBAccount.uiaccid)
}

// uint64 ulDBAccountid = 2;
void GD_DeleteDBAccount::clear_uldbaccountid() {
  uldbaccountid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GD_DeleteDBAccount::uldbaccountid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_DeleteDBAccount.ulDBAccountid)
  return uldbaccountid_;
}
void GD_DeleteDBAccount::set_uldbaccountid(::google::protobuf::uint64 value) {
  
  uldbaccountid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_DeleteDBAccount.ulDBAccountid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_DeleteDBAccount::kUiaccidFieldNumber;
const int DG_DeleteDBAccount::kIRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_DeleteDBAccount::DG_DeleteDBAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_DeleteDBAccount)
}
DG_DeleteDBAccount::DG_DeleteDBAccount(const DG_DeleteDBAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_DeleteDBAccount)
}

void DG_DeleteDBAccount::SharedCtor() {
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_DeleteDBAccount::~DG_DeleteDBAccount() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_DeleteDBAccount)
  SharedDtor();
}

void DG_DeleteDBAccount::SharedDtor() {
}

void DG_DeleteDBAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_DeleteDBAccount::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_DeleteDBAccount& DG_DeleteDBAccount::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_DeleteDBAccount* DG_DeleteDBAccount::New(::google::protobuf::Arena* arena) const {
  DG_DeleteDBAccount* n = new DG_DeleteDBAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_DeleteDBAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_DeleteDBAccount)
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_DeleteDBAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_DeleteDBAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_DeleteDBAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_DeleteDBAccount)
  return false;
#undef DO_
}

void DG_DeleteDBAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_DeleteDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_DeleteDBAccount)
}

::google::protobuf::uint8* DG_DeleteDBAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_DeleteDBAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_DeleteDBAccount)
  return target;
}

size_t DG_DeleteDBAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_DeleteDBAccount)
  size_t total_size = 0;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_DeleteDBAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_DeleteDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_DeleteDBAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_DeleteDBAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_DeleteDBAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_DeleteDBAccount)
    MergeFrom(*source);
  }
}

void DG_DeleteDBAccount::MergeFrom(const DG_DeleteDBAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_DeleteDBAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_DeleteDBAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_DeleteDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_DeleteDBAccount::CopyFrom(const DG_DeleteDBAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_DeleteDBAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_DeleteDBAccount::IsInitialized() const {
  return true;
}

void DG_DeleteDBAccount::Swap(DG_DeleteDBAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_DeleteDBAccount::InternalSwap(DG_DeleteDBAccount* other) {
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_DeleteDBAccount::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_DeleteDBAccount

// uint32 uiaccid = 1;
void DG_DeleteDBAccount::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_DeleteDBAccount::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_DeleteDBAccount.uiaccid)
  return uiaccid_;
}
void DG_DeleteDBAccount::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_DeleteDBAccount.uiaccid)
}

// int32 iRet = 2;
void DG_DeleteDBAccount::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_DeleteDBAccount::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_DeleteDBAccount.iRet)
  return iret_;
}
void DG_DeleteDBAccount::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_DeleteDBAccount.iRet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_GetDBUserInfo::kUiaccidFieldNumber;
const int GD_GetDBUserInfo::kUlDBUserInfoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_GetDBUserInfo::GD_GetDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_GetDBUserInfo)
}
GD_GetDBUserInfo::GD_GetDBUserInfo(const GD_GetDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uldbuserinfoid_, &from.uldbuserinfoid_,
    reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_GetDBUserInfo)
}

void GD_GetDBUserInfo::SharedCtor() {
  ::memset(&uldbuserinfoid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_GetDBUserInfo::~GD_GetDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_GetDBUserInfo)
  SharedDtor();
}

void GD_GetDBUserInfo::SharedDtor() {
}

void GD_GetDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_GetDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_GetDBUserInfo& GD_GetDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_GetDBUserInfo* GD_GetDBUserInfo::New(::google::protobuf::Arena* arena) const {
  GD_GetDBUserInfo* n = new GD_GetDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_GetDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_GetDBUserInfo)
  ::memset(&uldbuserinfoid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
}

bool GD_GetDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_GetDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ulDBUserInfoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uldbuserinfoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_GetDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_GetDBUserInfo)
  return false;
#undef DO_
}

void GD_GetDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_GetDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uldbuserinfoid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_GetDBUserInfo)
}

::google::protobuf::uint8* GD_GetDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_GetDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uldbuserinfoid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_GetDBUserInfo)
  return target;
}

size_t GD_GetDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_GetDBUserInfo)
  size_t total_size = 0;

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uldbuserinfoid());
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_GetDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_GetDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_GetDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_GetDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_GetDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_GetDBUserInfo)
    MergeFrom(*source);
  }
}

void GD_GetDBUserInfo::MergeFrom(const GD_GetDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_GetDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uldbuserinfoid() != 0) {
    set_uldbuserinfoid(from.uldbuserinfoid());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_GetDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_GetDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_GetDBUserInfo::CopyFrom(const GD_GetDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_GetDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_GetDBUserInfo::IsInitialized() const {
  return true;
}

void GD_GetDBUserInfo::Swap(GD_GetDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_GetDBUserInfo::InternalSwap(GD_GetDBUserInfo* other) {
  std::swap(uldbuserinfoid_, other->uldbuserinfoid_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_GetDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_GetDBUserInfo

// uint32 uiaccid = 1;
void GD_GetDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_GetDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_GetDBUserInfo.uiaccid)
  return uiaccid_;
}
void GD_GetDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_GetDBUserInfo.uiaccid)
}

// uint64 ulDBUserInfoid = 2;
void GD_GetDBUserInfo::clear_uldbuserinfoid() {
  uldbuserinfoid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GD_GetDBUserInfo::uldbuserinfoid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_GetDBUserInfo.ulDBUserInfoid)
  return uldbuserinfoid_;
}
void GD_GetDBUserInfo::set_uldbuserinfoid(::google::protobuf::uint64 value) {
  
  uldbuserinfoid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_GetDBUserInfo.ulDBUserInfoid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_GetDBUserInfo::kUiaccidFieldNumber;
const int DG_GetDBUserInfo::kIRetFieldNumber;
const int DG_GetDBUserInfo::kStDBUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_GetDBUserInfo::DG_GetDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_GetDBUserInfo)
}
DG_GetDBUserInfo::DG_GetDBUserInfo(const DG_GetDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbuserinfo()) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo(*from.stdbuserinfo_);
  } else {
    stdbuserinfo_ = NULL;
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_GetDBUserInfo)
}

void DG_GetDBUserInfo::SharedCtor() {
  ::memset(&stdbuserinfo_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&stdbuserinfo_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_GetDBUserInfo::~DG_GetDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_GetDBUserInfo)
  SharedDtor();
}

void DG_GetDBUserInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbuserinfo_;
  }
}

void DG_GetDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_GetDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_GetDBUserInfo& DG_GetDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_GetDBUserInfo* DG_GetDBUserInfo::New(::google::protobuf::Arena* arena) const {
  DG_GetDBUserInfo* n = new DG_GetDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_GetDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_GetDBUserInfo)
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) {
    delete stdbuserinfo_;
  }
  stdbuserinfo_ = NULL;
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_GetDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_GetDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBUserInfo stDBUserInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_GetDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_GetDBUserInfo)
  return false;
#undef DO_
}

void DG_GetDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_GetDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stdbuserinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_GetDBUserInfo)
}

::google::protobuf::uint8* DG_GetDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_GetDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->stdbuserinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_GetDBUserInfo)
  return target;
}

size_t DG_GetDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_GetDBUserInfo)
  size_t total_size = 0;

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbuserinfo_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_GetDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_GetDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_GetDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_GetDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_GetDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_GetDBUserInfo)
    MergeFrom(*source);
  }
}

void DG_GetDBUserInfo::MergeFrom(const DG_GetDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_GetDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbuserinfo()) {
    mutable_stdbuserinfo()->::PDB_Base::DBUserInfo::MergeFrom(from.stdbuserinfo());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_GetDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_GetDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_GetDBUserInfo::CopyFrom(const DG_GetDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_GetDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_GetDBUserInfo::IsInitialized() const {
  return true;
}

void DG_GetDBUserInfo::Swap(DG_GetDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_GetDBUserInfo::InternalSwap(DG_GetDBUserInfo* other) {
  std::swap(stdbuserinfo_, other->stdbuserinfo_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_GetDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_GetDBUserInfo

// uint32 uiaccid = 1;
void DG_GetDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_GetDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBUserInfo.uiaccid)
  return uiaccid_;
}
void DG_GetDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_GetDBUserInfo.uiaccid)
}

// int32 iRet = 2;
void DG_GetDBUserInfo::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_GetDBUserInfo::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBUserInfo.iRet)
  return iret_;
}
void DG_GetDBUserInfo::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_GetDBUserInfo.iRet)
}

// .PDB_Base.DBUserInfo stDBUserInfo = 3;
bool DG_GetDBUserInfo::has_stdbuserinfo() const {
  return this != internal_default_instance() && stdbuserinfo_ != NULL;
}
void DG_GetDBUserInfo::clear_stdbuserinfo() {
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) delete stdbuserinfo_;
  stdbuserinfo_ = NULL;
}
const ::PDB_Base::DBUserInfo& DG_GetDBUserInfo::stdbuserinfo() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_GetDBUserInfo.stDBUserInfo)
  return stdbuserinfo_ != NULL ? *stdbuserinfo_
                         : *::PDB_Base::DBUserInfo::internal_default_instance();
}
::PDB_Base::DBUserInfo* DG_GetDBUserInfo::mutable_stdbuserinfo() {
  
  if (stdbuserinfo_ == NULL) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.DG_GetDBUserInfo.stDBUserInfo)
  return stdbuserinfo_;
}
::PDB_Base::DBUserInfo* DG_GetDBUserInfo::release_stdbuserinfo() {
  // @@protoc_insertion_point(field_release:PDB_Option.DG_GetDBUserInfo.stDBUserInfo)
  
  ::PDB_Base::DBUserInfo* temp = stdbuserinfo_;
  stdbuserinfo_ = NULL;
  return temp;
}
void DG_GetDBUserInfo::set_allocated_stdbuserinfo(::PDB_Base::DBUserInfo* stdbuserinfo) {
  delete stdbuserinfo_;
  stdbuserinfo_ = stdbuserinfo;
  if (stdbuserinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.DG_GetDBUserInfo.stDBUserInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_CreateDBUserInfo::kUiaccidFieldNumber;
const int GD_CreateDBUserInfo::kStDBUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_CreateDBUserInfo::GD_CreateDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_CreateDBUserInfo)
}
GD_CreateDBUserInfo::GD_CreateDBUserInfo(const GD_CreateDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbuserinfo()) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo(*from.stdbuserinfo_);
  } else {
    stdbuserinfo_ = NULL;
  }
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_CreateDBUserInfo)
}

void GD_CreateDBUserInfo::SharedCtor() {
  ::memset(&stdbuserinfo_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&stdbuserinfo_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_CreateDBUserInfo::~GD_CreateDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_CreateDBUserInfo)
  SharedDtor();
}

void GD_CreateDBUserInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbuserinfo_;
  }
}

void GD_CreateDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_CreateDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_CreateDBUserInfo& GD_CreateDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_CreateDBUserInfo* GD_CreateDBUserInfo::New(::google::protobuf::Arena* arena) const {
  GD_CreateDBUserInfo* n = new GD_CreateDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_CreateDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_CreateDBUserInfo)
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) {
    delete stdbuserinfo_;
  }
  stdbuserinfo_ = NULL;
  uiaccid_ = 0u;
}

bool GD_CreateDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_CreateDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBUserInfo stDBUserInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_CreateDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_CreateDBUserInfo)
  return false;
#undef DO_
}

void GD_CreateDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_CreateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stdbuserinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_CreateDBUserInfo)
}

::google::protobuf::uint8* GD_CreateDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_CreateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->stdbuserinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_CreateDBUserInfo)
  return target;
}

size_t GD_CreateDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_CreateDBUserInfo)
  size_t total_size = 0;

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbuserinfo_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_CreateDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_CreateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_CreateDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_CreateDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_CreateDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_CreateDBUserInfo)
    MergeFrom(*source);
  }
}

void GD_CreateDBUserInfo::MergeFrom(const GD_CreateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_CreateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbuserinfo()) {
    mutable_stdbuserinfo()->::PDB_Base::DBUserInfo::MergeFrom(from.stdbuserinfo());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_CreateDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_CreateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_CreateDBUserInfo::CopyFrom(const GD_CreateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_CreateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_CreateDBUserInfo::IsInitialized() const {
  return true;
}

void GD_CreateDBUserInfo::Swap(GD_CreateDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_CreateDBUserInfo::InternalSwap(GD_CreateDBUserInfo* other) {
  std::swap(stdbuserinfo_, other->stdbuserinfo_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_CreateDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_CreateDBUserInfo

// uint32 uiaccid = 1;
void GD_CreateDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_CreateDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_CreateDBUserInfo.uiaccid)
  return uiaccid_;
}
void GD_CreateDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_CreateDBUserInfo.uiaccid)
}

// .PDB_Base.DBUserInfo stDBUserInfo = 2;
bool GD_CreateDBUserInfo::has_stdbuserinfo() const {
  return this != internal_default_instance() && stdbuserinfo_ != NULL;
}
void GD_CreateDBUserInfo::clear_stdbuserinfo() {
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) delete stdbuserinfo_;
  stdbuserinfo_ = NULL;
}
const ::PDB_Base::DBUserInfo& GD_CreateDBUserInfo::stdbuserinfo() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_CreateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_ != NULL ? *stdbuserinfo_
                         : *::PDB_Base::DBUserInfo::internal_default_instance();
}
::PDB_Base::DBUserInfo* GD_CreateDBUserInfo::mutable_stdbuserinfo() {
  
  if (stdbuserinfo_ == NULL) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.GD_CreateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_;
}
::PDB_Base::DBUserInfo* GD_CreateDBUserInfo::release_stdbuserinfo() {
  // @@protoc_insertion_point(field_release:PDB_Option.GD_CreateDBUserInfo.stDBUserInfo)
  
  ::PDB_Base::DBUserInfo* temp = stdbuserinfo_;
  stdbuserinfo_ = NULL;
  return temp;
}
void GD_CreateDBUserInfo::set_allocated_stdbuserinfo(::PDB_Base::DBUserInfo* stdbuserinfo) {
  delete stdbuserinfo_;
  stdbuserinfo_ = stdbuserinfo;
  if (stdbuserinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.GD_CreateDBUserInfo.stDBUserInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_CreateDBUserInfo::kUiaccidFieldNumber;
const int DG_CreateDBUserInfo::kIRetFieldNumber;
const int DG_CreateDBUserInfo::kStDBUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_CreateDBUserInfo::DG_CreateDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_CreateDBUserInfo)
}
DG_CreateDBUserInfo::DG_CreateDBUserInfo(const DG_CreateDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbuserinfo()) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo(*from.stdbuserinfo_);
  } else {
    stdbuserinfo_ = NULL;
  }
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_CreateDBUserInfo)
}

void DG_CreateDBUserInfo::SharedCtor() {
  ::memset(&stdbuserinfo_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&stdbuserinfo_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_CreateDBUserInfo::~DG_CreateDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_CreateDBUserInfo)
  SharedDtor();
}

void DG_CreateDBUserInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbuserinfo_;
  }
}

void DG_CreateDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_CreateDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_CreateDBUserInfo& DG_CreateDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_CreateDBUserInfo* DG_CreateDBUserInfo::New(::google::protobuf::Arena* arena) const {
  DG_CreateDBUserInfo* n = new DG_CreateDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_CreateDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_CreateDBUserInfo)
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) {
    delete stdbuserinfo_;
  }
  stdbuserinfo_ = NULL;
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_CreateDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_CreateDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBUserInfo stDBUserInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_CreateDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_CreateDBUserInfo)
  return false;
#undef DO_
}

void DG_CreateDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_CreateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->stdbuserinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_CreateDBUserInfo)
}

::google::protobuf::uint8* DG_CreateDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_CreateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->stdbuserinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_CreateDBUserInfo)
  return target;
}

size_t DG_CreateDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_CreateDBUserInfo)
  size_t total_size = 0;

  // .PDB_Base.DBUserInfo stDBUserInfo = 3;
  if (this->has_stdbuserinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbuserinfo_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_CreateDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_CreateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_CreateDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_CreateDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_CreateDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_CreateDBUserInfo)
    MergeFrom(*source);
  }
}

void DG_CreateDBUserInfo::MergeFrom(const DG_CreateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_CreateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbuserinfo()) {
    mutable_stdbuserinfo()->::PDB_Base::DBUserInfo::MergeFrom(from.stdbuserinfo());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_CreateDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_CreateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_CreateDBUserInfo::CopyFrom(const DG_CreateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_CreateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_CreateDBUserInfo::IsInitialized() const {
  return true;
}

void DG_CreateDBUserInfo::Swap(DG_CreateDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_CreateDBUserInfo::InternalSwap(DG_CreateDBUserInfo* other) {
  std::swap(stdbuserinfo_, other->stdbuserinfo_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_CreateDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_CreateDBUserInfo

// uint32 uiaccid = 1;
void DG_CreateDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_CreateDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBUserInfo.uiaccid)
  return uiaccid_;
}
void DG_CreateDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_CreateDBUserInfo.uiaccid)
}

// int32 iRet = 2;
void DG_CreateDBUserInfo::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_CreateDBUserInfo::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBUserInfo.iRet)
  return iret_;
}
void DG_CreateDBUserInfo::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_CreateDBUserInfo.iRet)
}

// .PDB_Base.DBUserInfo stDBUserInfo = 3;
bool DG_CreateDBUserInfo::has_stdbuserinfo() const {
  return this != internal_default_instance() && stdbuserinfo_ != NULL;
}
void DG_CreateDBUserInfo::clear_stdbuserinfo() {
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) delete stdbuserinfo_;
  stdbuserinfo_ = NULL;
}
const ::PDB_Base::DBUserInfo& DG_CreateDBUserInfo::stdbuserinfo() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_CreateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_ != NULL ? *stdbuserinfo_
                         : *::PDB_Base::DBUserInfo::internal_default_instance();
}
::PDB_Base::DBUserInfo* DG_CreateDBUserInfo::mutable_stdbuserinfo() {
  
  if (stdbuserinfo_ == NULL) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.DG_CreateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_;
}
::PDB_Base::DBUserInfo* DG_CreateDBUserInfo::release_stdbuserinfo() {
  // @@protoc_insertion_point(field_release:PDB_Option.DG_CreateDBUserInfo.stDBUserInfo)
  
  ::PDB_Base::DBUserInfo* temp = stdbuserinfo_;
  stdbuserinfo_ = NULL;
  return temp;
}
void DG_CreateDBUserInfo::set_allocated_stdbuserinfo(::PDB_Base::DBUserInfo* stdbuserinfo) {
  delete stdbuserinfo_;
  stdbuserinfo_ = stdbuserinfo;
  if (stdbuserinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.DG_CreateDBUserInfo.stDBUserInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_UpdateDBUserInfo::kUiaccidFieldNumber;
const int GD_UpdateDBUserInfo::kStDBUserInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_UpdateDBUserInfo::GD_UpdateDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_UpdateDBUserInfo)
}
GD_UpdateDBUserInfo::GD_UpdateDBUserInfo(const GD_UpdateDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_stdbuserinfo()) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo(*from.stdbuserinfo_);
  } else {
    stdbuserinfo_ = NULL;
  }
  uiaccid_ = from.uiaccid_;
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_UpdateDBUserInfo)
}

void GD_UpdateDBUserInfo::SharedCtor() {
  ::memset(&stdbuserinfo_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&stdbuserinfo_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_UpdateDBUserInfo::~GD_UpdateDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_UpdateDBUserInfo)
  SharedDtor();
}

void GD_UpdateDBUserInfo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete stdbuserinfo_;
  }
}

void GD_UpdateDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_UpdateDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_UpdateDBUserInfo& GD_UpdateDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_UpdateDBUserInfo* GD_UpdateDBUserInfo::New(::google::protobuf::Arena* arena) const {
  GD_UpdateDBUserInfo* n = new GD_UpdateDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_UpdateDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_UpdateDBUserInfo)
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) {
    delete stdbuserinfo_;
  }
  stdbuserinfo_ = NULL;
  uiaccid_ = 0u;
}

bool GD_UpdateDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_UpdateDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PDB_Base.DBUserInfo stDBUserInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stdbuserinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_UpdateDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_UpdateDBUserInfo)
  return false;
#undef DO_
}

void GD_UpdateDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_UpdateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->stdbuserinfo_, output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_UpdateDBUserInfo)
}

::google::protobuf::uint8* GD_UpdateDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_UpdateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->stdbuserinfo_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_UpdateDBUserInfo)
  return target;
}

size_t GD_UpdateDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_UpdateDBUserInfo)
  size_t total_size = 0;

  // .PDB_Base.DBUserInfo stDBUserInfo = 2;
  if (this->has_stdbuserinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stdbuserinfo_);
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_UpdateDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_UpdateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_UpdateDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_UpdateDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_UpdateDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_UpdateDBUserInfo)
    MergeFrom(*source);
  }
}

void GD_UpdateDBUserInfo::MergeFrom(const GD_UpdateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_UpdateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_stdbuserinfo()) {
    mutable_stdbuserinfo()->::PDB_Base::DBUserInfo::MergeFrom(from.stdbuserinfo());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_UpdateDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_UpdateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_UpdateDBUserInfo::CopyFrom(const GD_UpdateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_UpdateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_UpdateDBUserInfo::IsInitialized() const {
  return true;
}

void GD_UpdateDBUserInfo::Swap(GD_UpdateDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_UpdateDBUserInfo::InternalSwap(GD_UpdateDBUserInfo* other) {
  std::swap(stdbuserinfo_, other->stdbuserinfo_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_UpdateDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_UpdateDBUserInfo

// uint32 uiaccid = 1;
void GD_UpdateDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_UpdateDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_UpdateDBUserInfo.uiaccid)
  return uiaccid_;
}
void GD_UpdateDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_UpdateDBUserInfo.uiaccid)
}

// .PDB_Base.DBUserInfo stDBUserInfo = 2;
bool GD_UpdateDBUserInfo::has_stdbuserinfo() const {
  return this != internal_default_instance() && stdbuserinfo_ != NULL;
}
void GD_UpdateDBUserInfo::clear_stdbuserinfo() {
  if (GetArenaNoVirtual() == NULL && stdbuserinfo_ != NULL) delete stdbuserinfo_;
  stdbuserinfo_ = NULL;
}
const ::PDB_Base::DBUserInfo& GD_UpdateDBUserInfo::stdbuserinfo() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_UpdateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_ != NULL ? *stdbuserinfo_
                         : *::PDB_Base::DBUserInfo::internal_default_instance();
}
::PDB_Base::DBUserInfo* GD_UpdateDBUserInfo::mutable_stdbuserinfo() {
  
  if (stdbuserinfo_ == NULL) {
    stdbuserinfo_ = new ::PDB_Base::DBUserInfo;
  }
  // @@protoc_insertion_point(field_mutable:PDB_Option.GD_UpdateDBUserInfo.stDBUserInfo)
  return stdbuserinfo_;
}
::PDB_Base::DBUserInfo* GD_UpdateDBUserInfo::release_stdbuserinfo() {
  // @@protoc_insertion_point(field_release:PDB_Option.GD_UpdateDBUserInfo.stDBUserInfo)
  
  ::PDB_Base::DBUserInfo* temp = stdbuserinfo_;
  stdbuserinfo_ = NULL;
  return temp;
}
void GD_UpdateDBUserInfo::set_allocated_stdbuserinfo(::PDB_Base::DBUserInfo* stdbuserinfo) {
  delete stdbuserinfo_;
  stdbuserinfo_ = stdbuserinfo;
  if (stdbuserinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:PDB_Option.GD_UpdateDBUserInfo.stDBUserInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_UpdateDBUserInfo::kUiaccidFieldNumber;
const int DG_UpdateDBUserInfo::kIRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_UpdateDBUserInfo::DG_UpdateDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_UpdateDBUserInfo)
}
DG_UpdateDBUserInfo::DG_UpdateDBUserInfo(const DG_UpdateDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_UpdateDBUserInfo)
}

void DG_UpdateDBUserInfo::SharedCtor() {
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_UpdateDBUserInfo::~DG_UpdateDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_UpdateDBUserInfo)
  SharedDtor();
}

void DG_UpdateDBUserInfo::SharedDtor() {
}

void DG_UpdateDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_UpdateDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_UpdateDBUserInfo& DG_UpdateDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_UpdateDBUserInfo* DG_UpdateDBUserInfo::New(::google::protobuf::Arena* arena) const {
  DG_UpdateDBUserInfo* n = new DG_UpdateDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_UpdateDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_UpdateDBUserInfo)
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_UpdateDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_UpdateDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_UpdateDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_UpdateDBUserInfo)
  return false;
#undef DO_
}

void DG_UpdateDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_UpdateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_UpdateDBUserInfo)
}

::google::protobuf::uint8* DG_UpdateDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_UpdateDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_UpdateDBUserInfo)
  return target;
}

size_t DG_UpdateDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_UpdateDBUserInfo)
  size_t total_size = 0;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_UpdateDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_UpdateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_UpdateDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_UpdateDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_UpdateDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_UpdateDBUserInfo)
    MergeFrom(*source);
  }
}

void DG_UpdateDBUserInfo::MergeFrom(const DG_UpdateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_UpdateDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_UpdateDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_UpdateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_UpdateDBUserInfo::CopyFrom(const DG_UpdateDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_UpdateDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_UpdateDBUserInfo::IsInitialized() const {
  return true;
}

void DG_UpdateDBUserInfo::Swap(DG_UpdateDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_UpdateDBUserInfo::InternalSwap(DG_UpdateDBUserInfo* other) {
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_UpdateDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_UpdateDBUserInfo

// uint32 uiaccid = 1;
void DG_UpdateDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_UpdateDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_UpdateDBUserInfo.uiaccid)
  return uiaccid_;
}
void DG_UpdateDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_UpdateDBUserInfo.uiaccid)
}

// int32 iRet = 2;
void DG_UpdateDBUserInfo::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_UpdateDBUserInfo::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_UpdateDBUserInfo.iRet)
  return iret_;
}
void DG_UpdateDBUserInfo::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_UpdateDBUserInfo.iRet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GD_DeleteDBUserInfo::kUiaccidFieldNumber;
const int GD_DeleteDBUserInfo::kUlDBUserInfoidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GD_DeleteDBUserInfo::GD_DeleteDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.GD_DeleteDBUserInfo)
}
GD_DeleteDBUserInfo::GD_DeleteDBUserInfo(const GD_DeleteDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uldbuserinfoid_, &from.uldbuserinfoid_,
    reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.GD_DeleteDBUserInfo)
}

void GD_DeleteDBUserInfo::SharedCtor() {
  ::memset(&uldbuserinfoid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
  _cached_size_ = 0;
}

GD_DeleteDBUserInfo::~GD_DeleteDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.GD_DeleteDBUserInfo)
  SharedDtor();
}

void GD_DeleteDBUserInfo::SharedDtor() {
}

void GD_DeleteDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GD_DeleteDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GD_DeleteDBUserInfo& GD_DeleteDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

GD_DeleteDBUserInfo* GD_DeleteDBUserInfo::New(::google::protobuf::Arena* arena) const {
  GD_DeleteDBUserInfo* n = new GD_DeleteDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GD_DeleteDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.GD_DeleteDBUserInfo)
  ::memset(&uldbuserinfoid_, 0, reinterpret_cast<char*>(&uiaccid_) -
    reinterpret_cast<char*>(&uldbuserinfoid_) + sizeof(uiaccid_));
}

bool GD_DeleteDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.GD_DeleteDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ulDBUserInfoid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uldbuserinfoid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.GD_DeleteDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.GD_DeleteDBUserInfo)
  return false;
#undef DO_
}

void GD_DeleteDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.GD_DeleteDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uldbuserinfoid(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.GD_DeleteDBUserInfo)
}

::google::protobuf::uint8* GD_DeleteDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.GD_DeleteDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uldbuserinfoid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.GD_DeleteDBUserInfo)
  return target;
}

size_t GD_DeleteDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.GD_DeleteDBUserInfo)
  size_t total_size = 0;

  // uint64 ulDBUserInfoid = 2;
  if (this->uldbuserinfoid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uldbuserinfoid());
  }

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GD_DeleteDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.GD_DeleteDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const GD_DeleteDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GD_DeleteDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.GD_DeleteDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.GD_DeleteDBUserInfo)
    MergeFrom(*source);
  }
}

void GD_DeleteDBUserInfo::MergeFrom(const GD_DeleteDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.GD_DeleteDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uldbuserinfoid() != 0) {
    set_uldbuserinfoid(from.uldbuserinfoid());
  }
  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
}

void GD_DeleteDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.GD_DeleteDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GD_DeleteDBUserInfo::CopyFrom(const GD_DeleteDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.GD_DeleteDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GD_DeleteDBUserInfo::IsInitialized() const {
  return true;
}

void GD_DeleteDBUserInfo::Swap(GD_DeleteDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GD_DeleteDBUserInfo::InternalSwap(GD_DeleteDBUserInfo* other) {
  std::swap(uldbuserinfoid_, other->uldbuserinfoid_);
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GD_DeleteDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GD_DeleteDBUserInfo

// uint32 uiaccid = 1;
void GD_DeleteDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 GD_DeleteDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_DeleteDBUserInfo.uiaccid)
  return uiaccid_;
}
void GD_DeleteDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_DeleteDBUserInfo.uiaccid)
}

// uint64 ulDBUserInfoid = 2;
void GD_DeleteDBUserInfo::clear_uldbuserinfoid() {
  uldbuserinfoid_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 GD_DeleteDBUserInfo::uldbuserinfoid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.GD_DeleteDBUserInfo.ulDBUserInfoid)
  return uldbuserinfoid_;
}
void GD_DeleteDBUserInfo::set_uldbuserinfoid(::google::protobuf::uint64 value) {
  
  uldbuserinfoid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.GD_DeleteDBUserInfo.ulDBUserInfoid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DG_DeleteDBUserInfo::kUiaccidFieldNumber;
const int DG_DeleteDBUserInfo::kIRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DG_DeleteDBUserInfo::DG_DeleteDBUserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DB_5fOption_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PDB_Option.DG_DeleteDBUserInfo)
}
DG_DeleteDBUserInfo::DG_DeleteDBUserInfo(const DG_DeleteDBUserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uiaccid_, &from.uiaccid_,
    reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  // @@protoc_insertion_point(copy_constructor:PDB_Option.DG_DeleteDBUserInfo)
}

void DG_DeleteDBUserInfo::SharedCtor() {
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
  _cached_size_ = 0;
}

DG_DeleteDBUserInfo::~DG_DeleteDBUserInfo() {
  // @@protoc_insertion_point(destructor:PDB_Option.DG_DeleteDBUserInfo)
  SharedDtor();
}

void DG_DeleteDBUserInfo::SharedDtor() {
}

void DG_DeleteDBUserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DG_DeleteDBUserInfo::descriptor() {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DG_DeleteDBUserInfo& DG_DeleteDBUserInfo::default_instance() {
  protobuf_DB_5fOption_2eproto::InitDefaults();
  return *internal_default_instance();
}

DG_DeleteDBUserInfo* DG_DeleteDBUserInfo::New(::google::protobuf::Arena* arena) const {
  DG_DeleteDBUserInfo* n = new DG_DeleteDBUserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DG_DeleteDBUserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PDB_Option.DG_DeleteDBUserInfo)
  ::memset(&uiaccid_, 0, reinterpret_cast<char*>(&iret_) -
    reinterpret_cast<char*>(&uiaccid_) + sizeof(iret_));
}

bool DG_DeleteDBUserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PDB_Option.DG_DeleteDBUserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uiaccid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uiaccid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 iRet = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &iret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PDB_Option.DG_DeleteDBUserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PDB_Option.DG_DeleteDBUserInfo)
  return false;
#undef DO_
}

void DG_DeleteDBUserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PDB_Option.DG_DeleteDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uiaccid(), output);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->iret(), output);
  }

  // @@protoc_insertion_point(serialize_end:PDB_Option.DG_DeleteDBUserInfo)
}

::google::protobuf::uint8* DG_DeleteDBUserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PDB_Option.DG_DeleteDBUserInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uiaccid(), target);
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->iret(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PDB_Option.DG_DeleteDBUserInfo)
  return target;
}

size_t DG_DeleteDBUserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PDB_Option.DG_DeleteDBUserInfo)
  size_t total_size = 0;

  // uint32 uiaccid = 1;
  if (this->uiaccid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uiaccid());
  }

  // int32 iRet = 2;
  if (this->iret() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->iret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DG_DeleteDBUserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PDB_Option.DG_DeleteDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const DG_DeleteDBUserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DG_DeleteDBUserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PDB_Option.DG_DeleteDBUserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PDB_Option.DG_DeleteDBUserInfo)
    MergeFrom(*source);
  }
}

void DG_DeleteDBUserInfo::MergeFrom(const DG_DeleteDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PDB_Option.DG_DeleteDBUserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uiaccid() != 0) {
    set_uiaccid(from.uiaccid());
  }
  if (from.iret() != 0) {
    set_iret(from.iret());
  }
}

void DG_DeleteDBUserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PDB_Option.DG_DeleteDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DG_DeleteDBUserInfo::CopyFrom(const DG_DeleteDBUserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PDB_Option.DG_DeleteDBUserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DG_DeleteDBUserInfo::IsInitialized() const {
  return true;
}

void DG_DeleteDBUserInfo::Swap(DG_DeleteDBUserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DG_DeleteDBUserInfo::InternalSwap(DG_DeleteDBUserInfo* other) {
  std::swap(uiaccid_, other->uiaccid_);
  std::swap(iret_, other->iret_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DG_DeleteDBUserInfo::GetMetadata() const {
  protobuf_DB_5fOption_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DB_5fOption_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DG_DeleteDBUserInfo

// uint32 uiaccid = 1;
void DG_DeleteDBUserInfo::clear_uiaccid() {
  uiaccid_ = 0u;
}
::google::protobuf::uint32 DG_DeleteDBUserInfo::uiaccid() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_DeleteDBUserInfo.uiaccid)
  return uiaccid_;
}
void DG_DeleteDBUserInfo::set_uiaccid(::google::protobuf::uint32 value) {
  
  uiaccid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_DeleteDBUserInfo.uiaccid)
}

// int32 iRet = 2;
void DG_DeleteDBUserInfo::clear_iret() {
  iret_ = 0;
}
::google::protobuf::int32 DG_DeleteDBUserInfo::iret() const {
  // @@protoc_insertion_point(field_get:PDB_Option.DG_DeleteDBUserInfo.iRet)
  return iret_;
}
void DG_DeleteDBUserInfo::set_iret(::google::protobuf::int32 value) {
  
  iret_ = value;
  // @@protoc_insertion_point(field_set:PDB_Option.DG_DeleteDBUserInfo.iRet)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PDB_Option

// @@protoc_insertion_point(global_scope)
