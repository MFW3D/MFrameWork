// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DB_Base.proto

#ifndef PROTOBUF_DB_5fBase_2eproto__INCLUDED
#define PROTOBUF_DB_5fBase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace PDB_Base {
class DBAccount;
class DBAccountDefaultTypeInternal;
extern DBAccountDefaultTypeInternal _DBAccount_default_instance_;
class DBUserInfo;
class DBUserInfoDefaultTypeInternal;
extern DBUserInfoDefaultTypeInternal _DBUserInfo_default_instance_;
}  // namespace PDB_Base

namespace PDB_Base {

namespace protobuf_DB_5fBase_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DB_5fBase_2eproto

// ===================================================================

class DBAccount : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PDB_Base.DBAccount) */ {
 public:
  DBAccount();
  virtual ~DBAccount();

  DBAccount(const DBAccount& from);

  inline DBAccount& operator=(const DBAccount& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBAccount& default_instance();

  static inline const DBAccount* internal_default_instance() {
    return reinterpret_cast<const DBAccount*>(
               &_DBAccount_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DBAccount* other);

  // implements Message ----------------------------------------------

  inline DBAccount* New() const PROTOBUF_FINAL { return New(NULL); }

  DBAccount* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DBAccount& from);
  void MergeFrom(const DBAccount& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DBAccount* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sacc = 2;
  void clear_sacc();
  static const int kSaccFieldNumber = 2;
  const ::std::string& sacc() const;
  void set_sacc(const ::std::string& value);
  #if LANG_CXX11
  void set_sacc(::std::string&& value);
  #endif
  void set_sacc(const char* value);
  void set_sacc(const char* value, size_t size);
  ::std::string* mutable_sacc();
  ::std::string* release_sacc();
  void set_allocated_sacc(::std::string* sacc);

  // string spwd = 3;
  void clear_spwd();
  static const int kSpwdFieldNumber = 3;
  const ::std::string& spwd() const;
  void set_spwd(const ::std::string& value);
  #if LANG_CXX11
  void set_spwd(::std::string&& value);
  #endif
  void set_spwd(const char* value);
  void set_spwd(const char* value, size_t size);
  ::std::string* mutable_spwd();
  ::std::string* release_spwd();
  void set_allocated_spwd(::std::string* spwd);

  // string stel = 4;
  void clear_stel();
  static const int kStelFieldNumber = 4;
  const ::std::string& stel() const;
  void set_stel(const ::std::string& value);
  #if LANG_CXX11
  void set_stel(::std::string&& value);
  #endif
  void set_stel(const char* value);
  void set_stel(const char* value, size_t size);
  ::std::string* mutable_stel();
  ::std::string* release_stel();
  void set_allocated_stel(::std::string* stel);

  // string swx = 5;
  void clear_swx();
  static const int kSwxFieldNumber = 5;
  const ::std::string& swx() const;
  void set_swx(const ::std::string& value);
  #if LANG_CXX11
  void set_swx(::std::string&& value);
  #endif
  void set_swx(const char* value);
  void set_swx(const char* value, size_t size);
  ::std::string* mutable_swx();
  ::std::string* release_swx();
  void set_allocated_swx(::std::string* swx);

  // string sqq = 6;
  void clear_sqq();
  static const int kSqqFieldNumber = 6;
  const ::std::string& sqq() const;
  void set_sqq(const ::std::string& value);
  #if LANG_CXX11
  void set_sqq(::std::string&& value);
  #endif
  void set_sqq(const char* value);
  void set_sqq(const char* value, size_t size);
  ::std::string* mutable_sqq();
  ::std::string* release_sqq();
  void set_allocated_sqq(::std::string* sqq);

  // uint64 uluid = 1;
  void clear_uluid();
  static const int kUluidFieldNumber = 1;
  ::google::protobuf::uint64 uluid() const;
  void set_uluid(::google::protobuf::uint64 value);

  // uint64 ullastlogin = 7;
  void clear_ullastlogin();
  static const int kUllastloginFieldNumber = 7;
  ::google::protobuf::uint64 ullastlogin() const;
  void set_ullastlogin(::google::protobuf::uint64 value);

  // uint64 ulcreatetime = 8;
  void clear_ulcreatetime();
  static const int kUlcreatetimeFieldNumber = 8;
  ::google::protobuf::uint64 ulcreatetime() const;
  void set_ulcreatetime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PDB_Base.DBAccount)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sacc_;
  ::google::protobuf::internal::ArenaStringPtr spwd_;
  ::google::protobuf::internal::ArenaStringPtr stel_;
  ::google::protobuf::internal::ArenaStringPtr swx_;
  ::google::protobuf::internal::ArenaStringPtr sqq_;
  ::google::protobuf::uint64 uluid_;
  ::google::protobuf::uint64 ullastlogin_;
  ::google::protobuf::uint64 ulcreatetime_;
  mutable int _cached_size_;
  friend struct protobuf_DB_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DBUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PDB_Base.DBUserInfo) */ {
 public:
  DBUserInfo();
  virtual ~DBUserInfo();

  DBUserInfo(const DBUserInfo& from);

  inline DBUserInfo& operator=(const DBUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DBUserInfo& default_instance();

  static inline const DBUserInfo* internal_default_instance() {
    return reinterpret_cast<const DBUserInfo*>(
               &_DBUserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(DBUserInfo* other);

  // implements Message ----------------------------------------------

  inline DBUserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  DBUserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DBUserInfo& from);
  void MergeFrom(const DBUserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DBUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string snickname = 2;
  void clear_snickname();
  static const int kSnicknameFieldNumber = 2;
  const ::std::string& snickname() const;
  void set_snickname(const ::std::string& value);
  #if LANG_CXX11
  void set_snickname(::std::string&& value);
  #endif
  void set_snickname(const char* value);
  void set_snickname(const char* value, size_t size);
  ::std::string* mutable_snickname();
  ::std::string* release_snickname();
  void set_allocated_snickname(::std::string* snickname);

  // uint64 uluid = 1;
  void clear_uluid();
  static const int kUluidFieldNumber = 1;
  ::google::protobuf::uint64 uluid() const;
  void set_uluid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:PDB_Base.DBUserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr snickname_;
  ::google::protobuf::uint64 uluid_;
  mutable int _cached_size_;
  friend struct protobuf_DB_5fBase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DBAccount

// uint64 uluid = 1;
inline void DBAccount::clear_uluid() {
  uluid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DBAccount::uluid() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.uluid)
  return uluid_;
}
inline void DBAccount::set_uluid(::google::protobuf::uint64 value) {
  
  uluid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.uluid)
}

// string sacc = 2;
inline void DBAccount::clear_sacc() {
  sacc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBAccount::sacc() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.sacc)
  return sacc_.GetNoArena();
}
inline void DBAccount::set_sacc(const ::std::string& value) {
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.sacc)
}
#if LANG_CXX11
inline void DBAccount::set_sacc(::std::string&& value) {
  
  sacc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.sacc)
}
#endif
inline void DBAccount::set_sacc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.sacc)
}
inline void DBAccount::set_sacc(const char* value, size_t size) {
  
  sacc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.sacc)
}
inline ::std::string* DBAccount::mutable_sacc() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.sacc)
  return sacc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBAccount::release_sacc() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.sacc)
  
  return sacc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBAccount::set_allocated_sacc(::std::string* sacc) {
  if (sacc != NULL) {
    
  } else {
    
  }
  sacc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sacc);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.sacc)
}

// string spwd = 3;
inline void DBAccount::clear_spwd() {
  spwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBAccount::spwd() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.spwd)
  return spwd_.GetNoArena();
}
inline void DBAccount::set_spwd(const ::std::string& value) {
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.spwd)
}
#if LANG_CXX11
inline void DBAccount::set_spwd(::std::string&& value) {
  
  spwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.spwd)
}
#endif
inline void DBAccount::set_spwd(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.spwd)
}
inline void DBAccount::set_spwd(const char* value, size_t size) {
  
  spwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.spwd)
}
inline ::std::string* DBAccount::mutable_spwd() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.spwd)
  return spwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBAccount::release_spwd() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.spwd)
  
  return spwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBAccount::set_allocated_spwd(::std::string* spwd) {
  if (spwd != NULL) {
    
  } else {
    
  }
  spwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), spwd);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.spwd)
}

// string stel = 4;
inline void DBAccount::clear_stel() {
  stel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBAccount::stel() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.stel)
  return stel_.GetNoArena();
}
inline void DBAccount::set_stel(const ::std::string& value) {
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.stel)
}
#if LANG_CXX11
inline void DBAccount::set_stel(::std::string&& value) {
  
  stel_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.stel)
}
#endif
inline void DBAccount::set_stel(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.stel)
}
inline void DBAccount::set_stel(const char* value, size_t size) {
  
  stel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.stel)
}
inline ::std::string* DBAccount::mutable_stel() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.stel)
  return stel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBAccount::release_stel() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.stel)
  
  return stel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBAccount::set_allocated_stel(::std::string* stel) {
  if (stel != NULL) {
    
  } else {
    
  }
  stel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stel);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.stel)
}

// string swx = 5;
inline void DBAccount::clear_swx() {
  swx_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBAccount::swx() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.swx)
  return swx_.GetNoArena();
}
inline void DBAccount::set_swx(const ::std::string& value) {
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.swx)
}
#if LANG_CXX11
inline void DBAccount::set_swx(::std::string&& value) {
  
  swx_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.swx)
}
#endif
inline void DBAccount::set_swx(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.swx)
}
inline void DBAccount::set_swx(const char* value, size_t size) {
  
  swx_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.swx)
}
inline ::std::string* DBAccount::mutable_swx() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.swx)
  return swx_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBAccount::release_swx() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.swx)
  
  return swx_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBAccount::set_allocated_swx(::std::string* swx) {
  if (swx != NULL) {
    
  } else {
    
  }
  swx_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), swx);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.swx)
}

// string sqq = 6;
inline void DBAccount::clear_sqq() {
  sqq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBAccount::sqq() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.sqq)
  return sqq_.GetNoArena();
}
inline void DBAccount::set_sqq(const ::std::string& value) {
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.sqq)
}
#if LANG_CXX11
inline void DBAccount::set_sqq(::std::string&& value) {
  
  sqq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBAccount.sqq)
}
#endif
inline void DBAccount::set_sqq(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBAccount.sqq)
}
inline void DBAccount::set_sqq(const char* value, size_t size) {
  
  sqq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBAccount.sqq)
}
inline ::std::string* DBAccount::mutable_sqq() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBAccount.sqq)
  return sqq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBAccount::release_sqq() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBAccount.sqq)
  
  return sqq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBAccount::set_allocated_sqq(::std::string* sqq) {
  if (sqq != NULL) {
    
  } else {
    
  }
  sqq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sqq);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBAccount.sqq)
}

// uint64 ullastlogin = 7;
inline void DBAccount::clear_ullastlogin() {
  ullastlogin_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DBAccount::ullastlogin() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.ullastlogin)
  return ullastlogin_;
}
inline void DBAccount::set_ullastlogin(::google::protobuf::uint64 value) {
  
  ullastlogin_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.ullastlogin)
}

// uint64 ulcreatetime = 8;
inline void DBAccount::clear_ulcreatetime() {
  ulcreatetime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DBAccount::ulcreatetime() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBAccount.ulcreatetime)
  return ulcreatetime_;
}
inline void DBAccount::set_ulcreatetime(::google::protobuf::uint64 value) {
  
  ulcreatetime_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBAccount.ulcreatetime)
}

// -------------------------------------------------------------------

// DBUserInfo

// uint64 uluid = 1;
inline void DBUserInfo::clear_uluid() {
  uluid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DBUserInfo::uluid() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBUserInfo.uluid)
  return uluid_;
}
inline void DBUserInfo::set_uluid(::google::protobuf::uint64 value) {
  
  uluid_ = value;
  // @@protoc_insertion_point(field_set:PDB_Base.DBUserInfo.uluid)
}

// string snickname = 2;
inline void DBUserInfo::clear_snickname() {
  snickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DBUserInfo::snickname() const {
  // @@protoc_insertion_point(field_get:PDB_Base.DBUserInfo.snickname)
  return snickname_.GetNoArena();
}
inline void DBUserInfo::set_snickname(const ::std::string& value) {
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PDB_Base.DBUserInfo.snickname)
}
#if LANG_CXX11
inline void DBUserInfo::set_snickname(::std::string&& value) {
  
  snickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PDB_Base.DBUserInfo.snickname)
}
#endif
inline void DBUserInfo::set_snickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PDB_Base.DBUserInfo.snickname)
}
inline void DBUserInfo::set_snickname(const char* value, size_t size) {
  
  snickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PDB_Base.DBUserInfo.snickname)
}
inline ::std::string* DBUserInfo::mutable_snickname() {
  
  // @@protoc_insertion_point(field_mutable:PDB_Base.DBUserInfo.snickname)
  return snickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DBUserInfo::release_snickname() {
  // @@protoc_insertion_point(field_release:PDB_Base.DBUserInfo.snickname)
  
  return snickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DBUserInfo::set_allocated_snickname(::std::string* snickname) {
  if (snickname != NULL) {
    
  } else {
    
  }
  snickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snickname);
  // @@protoc_insertion_point(field_set_allocated:PDB_Base.DBUserInfo.snickname)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace PDB_Base

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DB_5fBase_2eproto__INCLUDED
