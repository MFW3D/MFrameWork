// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Common_Base.proto

#ifndef PROTOBUF_Common_5fBase_2eproto__INCLUDED
#define PROTOBUF_Common_5fBase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace PCommon_Base {
class MTest1;
class MTest1DefaultTypeInternal;
extern MTest1DefaultTypeInternal _MTest1_default_instance_;
class MTest2;
class MTest2DefaultTypeInternal;
extern MTest2DefaultTypeInternal _MTest2_default_instance_;
class NetHead;
class NetHeadDefaultTypeInternal;
extern NetHeadDefaultTypeInternal _NetHead_default_instance_;
class NetTransferMsg;
class NetTransferMsgDefaultTypeInternal;
extern NetTransferMsgDefaultTypeInternal _NetTransferMsg_default_instance_;
class NetTransferMsgs;
class NetTransferMsgsDefaultTypeInternal;
extern NetTransferMsgsDefaultTypeInternal _NetTransferMsgs_default_instance_;
class PUserInfo;
class PUserInfoDefaultTypeInternal;
extern PUserInfoDefaultTypeInternal _PUserInfo_default_instance_;
}  // namespace PCommon_Base

namespace PCommon_Base {

namespace protobuf_Common_5fBase_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_Common_5fBase_2eproto

enum EPublic_CMD {
  EPublic_CMD_None = 0,
  EPublic_CMD_PackTransferMsg = 1,
  EPublic_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EPublic_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EPublic_CMD_IsValid(int value);
const EPublic_CMD EPublic_CMD_MIN = EPublic_CMD_None;
const EPublic_CMD EPublic_CMD_MAX = EPublic_CMD_PackTransferMsg;
const int EPublic_CMD_ARRAYSIZE = EPublic_CMD_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPublic_CMD_descriptor();
inline const ::std::string& EPublic_CMD_Name(EPublic_CMD value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPublic_CMD_descriptor(), value);
}
inline bool EPublic_CMD_Parse(
    const ::std::string& name, EPublic_CMD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPublic_CMD>(
    EPublic_CMD_descriptor(), name, value);
}
enum EPublic_Ret {
  EPublic_Ret_OK = 0,
  EPublic_Ret_Error = 1,
  EPublic_Ret_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EPublic_Ret_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EPublic_Ret_IsValid(int value);
const EPublic_Ret EPublic_Ret_MIN = EPublic_Ret_OK;
const EPublic_Ret EPublic_Ret_MAX = EPublic_Ret_Error;
const int EPublic_Ret_ARRAYSIZE = EPublic_Ret_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPublic_Ret_descriptor();
inline const ::std::string& EPublic_Ret_Name(EPublic_Ret value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPublic_Ret_descriptor(), value);
}
inline bool EPublic_Ret_Parse(
    const ::std::string& name, EPublic_Ret* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPublic_Ret>(
    EPublic_Ret_descriptor(), name, value);
}
enum ETest {
  Test1 = 0,
  Test2 = 1,
  Test3 = 2,
  ETest_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETest_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETest_IsValid(int value);
const ETest ETest_MIN = Test1;
const ETest ETest_MAX = Test3;
const int ETest_ARRAYSIZE = ETest_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETest_descriptor();
inline const ::std::string& ETest_Name(ETest value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETest_descriptor(), value);
}
inline bool ETest_Parse(
    const ::std::string& name, ETest* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETest>(
    ETest_descriptor(), name, value);
}
// ===================================================================

class NetHead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.NetHead) */ {
 public:
  NetHead();
  virtual ~NetHead();

  NetHead(const NetHead& from);

  inline NetHead& operator=(const NetHead& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetHead& default_instance();

  static inline const NetHead* internal_default_instance() {
    return reinterpret_cast<const NetHead*>(
               &_NetHead_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(NetHead* other);

  // implements Message ----------------------------------------------

  inline NetHead* New() const PROTOBUF_FINAL { return New(NULL); }

  NetHead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetHead& from);
  void MergeFrom(const NetHead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetHead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // int32 Cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // int32 Index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // int32 Count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // int32 DataLength = 5;
  void clear_datalength();
  static const int kDataLengthFieldNumber = 5;
  ::google::protobuf::int32 datalength() const;
  void set_datalength(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PCommon_Base.NetHead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 key_;
  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 datalength_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NetTransferMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.NetTransferMsg) */ {
 public:
  NetTransferMsg();
  virtual ~NetTransferMsg();

  NetTransferMsg(const NetTransferMsg& from);

  inline NetTransferMsg& operator=(const NetTransferMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetTransferMsg& default_instance();

  static inline const NetTransferMsg* internal_default_instance() {
    return reinterpret_cast<const NetTransferMsg*>(
               &_NetTransferMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NetTransferMsg* other);

  // implements Message ----------------------------------------------

  inline NetTransferMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NetTransferMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetTransferMsg& from);
  void MergeFrom(const NetTransferMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetTransferMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const char* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // int32 cmd = 2;
  void clear_cmd();
  static const int kCmdFieldNumber = 2;
  ::google::protobuf::int32 cmd() const;
  void set_cmd(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PCommon_Base.NetTransferMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::int32 cmd_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NetTransferMsgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.NetTransferMsgs) */ {
 public:
  NetTransferMsgs();
  virtual ~NetTransferMsgs();

  NetTransferMsgs(const NetTransferMsgs& from);

  inline NetTransferMsgs& operator=(const NetTransferMsgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NetTransferMsgs& default_instance();

  static inline const NetTransferMsgs* internal_default_instance() {
    return reinterpret_cast<const NetTransferMsgs*>(
               &_NetTransferMsgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(NetTransferMsgs* other);

  // implements Message ----------------------------------------------

  inline NetTransferMsgs* New() const PROTOBUF_FINAL { return New(NULL); }

  NetTransferMsgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NetTransferMsgs& from);
  void MergeFrom(const NetTransferMsgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NetTransferMsgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PCommon_Base.NetTransferMsg NetTransferMsgs = 1;
  int nettransfermsgs_size() const;
  void clear_nettransfermsgs();
  static const int kNetTransferMsgsFieldNumber = 1;
  const ::PCommon_Base::NetTransferMsg& nettransfermsgs(int index) const;
  ::PCommon_Base::NetTransferMsg* mutable_nettransfermsgs(int index);
  ::PCommon_Base::NetTransferMsg* add_nettransfermsgs();
  ::google::protobuf::RepeatedPtrField< ::PCommon_Base::NetTransferMsg >*
      mutable_nettransfermsgs();
  const ::google::protobuf::RepeatedPtrField< ::PCommon_Base::NetTransferMsg >&
      nettransfermsgs() const;

  // @@protoc_insertion_point(class_scope:PCommon_Base.NetTransferMsgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::PCommon_Base::NetTransferMsg > nettransfermsgs_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PUserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.PUserInfo) */ {
 public:
  PUserInfo();
  virtual ~PUserInfo();

  PUserInfo(const PUserInfo& from);

  inline PUserInfo& operator=(const PUserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PUserInfo& default_instance();

  static inline const PUserInfo* internal_default_instance() {
    return reinterpret_cast<const PUserInfo*>(
               &_PUserInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(PUserInfo* other);

  // implements Message ----------------------------------------------

  inline PUserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PUserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PUserInfo& from);
  void MergeFrom(const PUserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PUserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes nickname = 2;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const void* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // int64 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PCommon_Base.PUserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::int64 uid_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTest1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.MTest1) */ {
 public:
  MTest1();
  virtual ~MTest1();

  MTest1(const MTest1& from);

  inline MTest1& operator=(const MTest1& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTest1& default_instance();

  static inline const MTest1* internal_default_instance() {
    return reinterpret_cast<const MTest1*>(
               &_MTest1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MTest1* other);

  // implements Message ----------------------------------------------

  inline MTest1* New() const PROTOBUF_FINAL { return New(NULL); }

  MTest1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTest1& from);
  void MergeFrom(const MTest1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTest1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 1;
  void clear_a();
  static const int kAFieldNumber = 1;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // int32 b = 2;
  void clear_b();
  static const int kBFieldNumber = 2;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PCommon_Base.MTest1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MTest2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PCommon_Base.MTest2) */ {
 public:
  MTest2();
  virtual ~MTest2();

  MTest2(const MTest2& from);

  inline MTest2& operator=(const MTest2& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MTest2& default_instance();

  static inline const MTest2* internal_default_instance() {
    return reinterpret_cast<const MTest2*>(
               &_MTest2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(MTest2* other);

  // implements Message ----------------------------------------------

  inline MTest2* New() const PROTOBUF_FINAL { return New(NULL); }

  MTest2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MTest2& from);
  void MergeFrom(const MTest2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MTest2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 a = 2;
  void clear_a();
  static const int kAFieldNumber = 2;
  ::google::protobuf::int32 a() const;
  void set_a(::google::protobuf::int32 value);

  // int32 b = 3;
  void clear_b();
  static const int kBFieldNumber = 3;
  ::google::protobuf::int32 b() const;
  void set_b(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PCommon_Base.MTest2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 a_;
  ::google::protobuf::int32 b_;
  mutable int _cached_size_;
  friend struct protobuf_Common_5fBase_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NetHead

// int32 key = 1;
inline void NetHead::clear_key() {
  key_ = 0;
}
inline ::google::protobuf::int32 NetHead::key() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetHead.key)
  return key_;
}
inline void NetHead::set_key(::google::protobuf::int32 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetHead.key)
}

// int32 Cmd = 2;
inline void NetHead::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 NetHead::cmd() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetHead.Cmd)
  return cmd_;
}
inline void NetHead::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetHead.Cmd)
}

// int32 Index = 3;
inline void NetHead::clear_index() {
  index_ = 0;
}
inline ::google::protobuf::int32 NetHead::index() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetHead.Index)
  return index_;
}
inline void NetHead::set_index(::google::protobuf::int32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetHead.Index)
}

// int32 Count = 4;
inline void NetHead::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 NetHead::count() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetHead.Count)
  return count_;
}
inline void NetHead::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetHead.Count)
}

// int32 DataLength = 5;
inline void NetHead::clear_datalength() {
  datalength_ = 0;
}
inline ::google::protobuf::int32 NetHead::datalength() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetHead.DataLength)
  return datalength_;
}
inline void NetHead::set_datalength(::google::protobuf::int32 value) {
  
  datalength_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetHead.DataLength)
}

// -------------------------------------------------------------------

// NetTransferMsg

// uint64 id = 1;
inline void NetTransferMsg::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NetTransferMsg::id() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetTransferMsg.id)
  return id_;
}
inline void NetTransferMsg::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetTransferMsg.id)
}

// int32 cmd = 2;
inline void NetTransferMsg::clear_cmd() {
  cmd_ = 0;
}
inline ::google::protobuf::int32 NetTransferMsg::cmd() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetTransferMsg.cmd)
  return cmd_;
}
inline void NetTransferMsg::set_cmd(::google::protobuf::int32 value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.NetTransferMsg.cmd)
}

// string data = 3;
inline void NetTransferMsg::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NetTransferMsg::data() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetTransferMsg.data)
  return data_.GetNoArena();
}
inline void NetTransferMsg::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PCommon_Base.NetTransferMsg.data)
}
#if LANG_CXX11
inline void NetTransferMsg::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PCommon_Base.NetTransferMsg.data)
}
#endif
inline void NetTransferMsg::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PCommon_Base.NetTransferMsg.data)
}
inline void NetTransferMsg::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PCommon_Base.NetTransferMsg.data)
}
inline ::std::string* NetTransferMsg::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:PCommon_Base.NetTransferMsg.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NetTransferMsg::release_data() {
  // @@protoc_insertion_point(field_release:PCommon_Base.NetTransferMsg.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NetTransferMsg::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:PCommon_Base.NetTransferMsg.data)
}

// -------------------------------------------------------------------

// NetTransferMsgs

// repeated .PCommon_Base.NetTransferMsg NetTransferMsgs = 1;
inline int NetTransferMsgs::nettransfermsgs_size() const {
  return nettransfermsgs_.size();
}
inline void NetTransferMsgs::clear_nettransfermsgs() {
  nettransfermsgs_.Clear();
}
inline const ::PCommon_Base::NetTransferMsg& NetTransferMsgs::nettransfermsgs(int index) const {
  // @@protoc_insertion_point(field_get:PCommon_Base.NetTransferMsgs.NetTransferMsgs)
  return nettransfermsgs_.Get(index);
}
inline ::PCommon_Base::NetTransferMsg* NetTransferMsgs::mutable_nettransfermsgs(int index) {
  // @@protoc_insertion_point(field_mutable:PCommon_Base.NetTransferMsgs.NetTransferMsgs)
  return nettransfermsgs_.Mutable(index);
}
inline ::PCommon_Base::NetTransferMsg* NetTransferMsgs::add_nettransfermsgs() {
  // @@protoc_insertion_point(field_add:PCommon_Base.NetTransferMsgs.NetTransferMsgs)
  return nettransfermsgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PCommon_Base::NetTransferMsg >*
NetTransferMsgs::mutable_nettransfermsgs() {
  // @@protoc_insertion_point(field_mutable_list:PCommon_Base.NetTransferMsgs.NetTransferMsgs)
  return &nettransfermsgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PCommon_Base::NetTransferMsg >&
NetTransferMsgs::nettransfermsgs() const {
  // @@protoc_insertion_point(field_list:PCommon_Base.NetTransferMsgs.NetTransferMsgs)
  return nettransfermsgs_;
}

// -------------------------------------------------------------------

// PUserInfo

// int64 uid = 1;
inline void PUserInfo::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 PUserInfo::uid() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.PUserInfo.uid)
  return uid_;
}
inline void PUserInfo::set_uid(::google::protobuf::int64 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.PUserInfo.uid)
}

// bytes nickname = 2;
inline void PUserInfo::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PUserInfo::nickname() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.PUserInfo.nickname)
  return nickname_.GetNoArena();
}
inline void PUserInfo::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PCommon_Base.PUserInfo.nickname)
}
#if LANG_CXX11
inline void PUserInfo::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PCommon_Base.PUserInfo.nickname)
}
#endif
inline void PUserInfo::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PCommon_Base.PUserInfo.nickname)
}
inline void PUserInfo::set_nickname(const void* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PCommon_Base.PUserInfo.nickname)
}
inline ::std::string* PUserInfo::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:PCommon_Base.PUserInfo.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PUserInfo::release_nickname() {
  // @@protoc_insertion_point(field_release:PCommon_Base.PUserInfo.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PUserInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:PCommon_Base.PUserInfo.nickname)
}

// -------------------------------------------------------------------

// MTest1

// int32 a = 1;
inline void MTest1::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 MTest1::a() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.MTest1.a)
  return a_;
}
inline void MTest1::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.MTest1.a)
}

// int32 b = 2;
inline void MTest1::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 MTest1::b() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.MTest1.b)
  return b_;
}
inline void MTest1::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.MTest1.b)
}

// -------------------------------------------------------------------

// MTest2

// int32 a = 2;
inline void MTest2::clear_a() {
  a_ = 0;
}
inline ::google::protobuf::int32 MTest2::a() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.MTest2.a)
  return a_;
}
inline void MTest2::set_a(::google::protobuf::int32 value) {
  
  a_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.MTest2.a)
}

// int32 b = 3;
inline void MTest2::clear_b() {
  b_ = 0;
}
inline ::google::protobuf::int32 MTest2::b() const {
  // @@protoc_insertion_point(field_get:PCommon_Base.MTest2.b)
  return b_;
}
inline void MTest2::set_b(::google::protobuf::int32 value) {
  
  b_ = value;
  // @@protoc_insertion_point(field_set:PCommon_Base.MTest2.b)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace PCommon_Base

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PCommon_Base::EPublic_CMD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PCommon_Base::EPublic_CMD>() {
  return ::PCommon_Base::EPublic_CMD_descriptor();
}
template <> struct is_proto_enum< ::PCommon_Base::EPublic_Ret> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PCommon_Base::EPublic_Ret>() {
  return ::PCommon_Base::EPublic_Ret_descriptor();
}
template <> struct is_proto_enum< ::PCommon_Base::ETest> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PCommon_Base::ETest>() {
  return ::PCommon_Base::ETest_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Common_5fBase_2eproto__INCLUDED
